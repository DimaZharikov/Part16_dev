{"version":3,"sources":["Redux/ProfileReducer/ProfileReducer.ts","Components/c1-SuperInputText/SuperInputText.tsx","Components/c3-SuperCheckbox/SuperCheckbox.tsx","Components/c2-SuperButton/SuperButton.tsx","API/Api.ts","Redux/AppReducer/AppReducer.ts","Redux/AuthReducer/AuthReducer.ts","Redux/RegistrationReducer/RegistartionReducer.ts","Common/preloader/Spinner.tsx","Utils/Validation/ValidationPassword.tsx","PagesApp/WrappedPages/AuthPage/AuthContainer.tsx","Redux/ResPassReducer/ResPasswordReducer.ts","PagesApp/WrappedPages/RegistartionPage/RegistrationContainer.tsx","Components/Modal/Modal.tsx","PagesApp/WrappedPages/ProfilePage/ProfileChangeName/ProfileChangeName.tsx","PagesApp/WrappedPages/ProfilePage/ProfileContainer.tsx","PagesApp/WrappedPages/ResPasswordPage/ResPasswordComponent.tsx","Redux/NewPassReducer/NewPassReducer.ts","PagesApp/WrappedPages/ResPasswordPage/ResPasswordContainer.tsx","Routes/Routes.tsx","PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer.tsx","PagesApp/WrappedPages/ErrorPage/Error404.tsx","PagesApp/WrappedPages/ErrorPage/ErrorContainer.tsx","Redux/ErrorReducer/ErrorReducer.ts","PagesApp/StaticPages/Navigation/NavigationContainer.tsx","App.tsx","reportWebVitals.ts","Redux/Store.ts","index.tsx","PagesApp/WrappedPages/ProfilePage/ProfileContainer.module.scss","PagesApp/WrappedPages/AuthPage/AuthContainer.module.css","PagesApp/StaticPages/Navigation/NavigationContainer.module.scss","Components/c1-SuperInputText/SuperInputText.module.css","Components/Modal/Modal.module.scss","PagesApp/WrappedPages/RegistartionPage/Registration.module.scss","PagesApp/WrappedPages/ResPasswordPage/ResPassword.module.css","Components/c3-SuperCheckbox/SuperCheckbox.module.css","Components/c2-SuperButton/SuperButton.module.css","PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer.module.scss","Common/preloader/Spinner.module.scss","PagesApp/WrappedPages/ErrorPage/Error404.module.css"],"names":["ActionType","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","errorMes","onBlur","setError","value","restProps","useState","ErrorBlur","setErrorBlur","finalSpanClassName","s","finalInputClassName","superInput","errorInput","e","currentTarget","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","button_red","button_default","axiosInstance","axios","create","baseURL","withCredentials","ApiAuth","email","password","rememberMe","post","delete","message","name","put","token","resetPasswordToken","ApiRegistration","initialState","profile","undefined","setProfileAc","SET_PROFILE","payload","ProfileReducer","state","action","CLEAN_PROFILE","isInitial","isLogin","status","setLoginAC","SET_LOGIN","setStatusAC","setErrorMes","SET_ERROR_MES","setAuthMe","dispatch","then","res","console","log","data","catch","response","finally","SET_INITIAL_APP","AuthReducer","SET_STATUS","Spinner","arrStyle","i","push","loader","map","item","inx","style","validateInputNewPas","setPassword","setErrorMesPas","setErrorPas","rePassword","trim","test","AuthContainer","reEmail","setEmail","errorLog","setErrorLog","errorMesLog","setErrorMesLog","errorMesPas","errorPas","check","setCheck","useSelector","auth","errordata","useDispatch","to","container","auth_main","auth_wrapper","input_block","placeholder","auth_link","RoutingType","registration","resPass","btn_check","onClick","setLoginT","disabled","errorMesOp","isRegistration","setRegistration","SET_IS_REGISTRATION","setStatus","putData","SET_ERROR","RegistrationReducer","SET_DATA","RegistrationContainer","confirmPassword","setConfirmPassword","isValidEmail","setIsValidEmail","isValidPassword","setIsValidPassword","isValidConfirmPassword","setIsValidConfirmPassword","errorEmail","setErrorEmail","errorPassword","setErrorPassword","errorConfirmPassword","setErrorConfirmPassword","Paper","reg_wrapper","length","btn","Modal","modal","setModal","finalModalClassName","active","finalModalContentClassName","modal_content","stopPropagation","ProfileChangeName","setName","change_name","updatedUser","setChangeName","ProfileContainer","document","cookie","profile_main_wrapper","profile_item_wrapper","profile_item","item_title","_id","ResPassword","title","checkWith","ResPasswordReducer","SET_CHECK_WITH","ResPasswordContainer","resPas","formik","useFormik","initialValues","onSubmit","values","a","resetForm","validate","errors","res_Password_wrapper","ResPasswordComponent","handleSubmit","input_style","getFieldProps","touched","changeMes","loading","setNewMes","NEW_CHANGE_MES","loadingNewPas","LOADING","ChangePassword","ERROR_MES","NewPasswordReducer","NewPasswordContainer","errorMesConfirmPas","setErrorMesConfirmPas","newPas","isChange","useHistory","location","pathname","replace","wrapper_main","wrapper_items","Error404","wrapped","sadMac","srText","r","o","_4","_0","n","t","f","u","d","ErrorContainer","Routes","path","exact","render","newPass","from","NavigationContainer","wrapper","activeClassName","App","app","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorReducer","reducer","combineReducers","NewPassReducer","middleware","applyMiddleware","thunkMiddleware","store","createStore","composeWithDevTools","window","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5f421f93.chunk.js","sourcesContent":["import {ResponseTypeProfile} from '../../API/Api'\r\n\r\n\r\nexport interface stateProps {\r\n    profile?: ResponseTypeProfile\r\n\r\n}\r\n\r\n\r\nconst initialState = {\r\n    profile: undefined\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_PROFILE = 'PROFILE/SET_PROFILE',\r\n    CLEAN_PROFILE = 'PROFILE/CLEAN_PROFILE'\r\n}\r\n\r\n\r\n//actions\r\n\r\n// interface Action<T> {\r\n//     type: ActionType,\r\n//     payload: T\r\n//\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileReducer = (state: stateProps  = initialState, action: ActionProfileType): stateProps  => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.SET_PROFILE:\r\n            return {...state, profile: {...action.payload}}\r\n        case ActionType.CLEAN_PROFILE:\r\n            return {...state, profile: undefined}\r\n        default: return  state\r\n    }\r\n\r\n}\r\n\r\nexport const setProfileAc = (profile: ResponseTypeProfile ) => {\r\n    return {type: ActionType.SET_PROFILE, payload: profile} as const\r\n}\r\nexport const cleanProfile = () => {\r\n    return {type:ActionType.CLEAN_PROFILE} as const\r\n}\r\n\r\nexport type ActionProfileType = ReturnType<typeof setProfileAc> | ReturnType<typeof cleanProfile>\r\n\r\n\r\nexport default ProfileReducer","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: boolean\r\n    spanClassName?: string\r\n    errorMes?: string\r\n    setError?:(value:boolean) => void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        errorMes,\r\n        onBlur,\r\n        setError,\r\n        value,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n    const [ErrorBlur, setErrorBlur] = useState<boolean>(false)\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.superInput} ${ErrorBlur && error ? s.errorInput : className ? s[className] : ''}`; // need to fix with (?:) and s.superInput\r\n\r\n    const onBlurHandler = (e:React.FocusEvent<HTMLInputElement>) => {\r\n        if (error) {\r\n            onBlur && onBlur(e)\r\n            setErrorBlur(true)\r\n        } else if (!value){\r\n            onBlur && onBlur(e)\r\n            setErrorBlur(true)\r\n            setError && setError(true)\r\n        } else {\r\n            setErrorBlur(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <input\r\n                type={type ? type : 'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                onBlur={ onBlurHandler}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {ErrorBlur && error ? <span className={finalSpanClassName}>{errorMes}</span> :\r\n                <span className={finalSpanClassName}> </span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange\r\n        && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.button_red : s.button_default}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import axios from \"axios\";\r\n\r\n\r\n//first deploy at 10.02.21\r\nconst configOMB = {\r\n    // localBack\r\n    //baseURL: \"http://localhost:7542/2.0/\",\r\n    // heroku\r\n    baseURL:'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n};\r\n\r\nconst axiosInstance = axios.create(configOMB);\r\nexport type ResponseTypeProfile = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    token: string\r\n}\r\n\r\nexport type ResponseTypeLogOut = {\r\n    info: string\r\n    error: string;\r\n}\r\n\r\nexport type ResponseTypeRegistration = {\r\n    email: string,\r\n    password: string,\r\n    error?: string | undefined\r\n}\r\n\r\nexport const ApiAuth = {\r\n        login(email: string, password: string, rememberMe: boolean) {\r\n            return axiosInstance.post<ResponseTypeProfile>('/auth/login', {email, password, rememberMe})\r\n        },\r\n        logOut() {\r\n            return axiosInstance.delete<ResponseTypeLogOut>('/auth/me')\r\n        },\r\n        recovery(email: string) {\r\n            return axiosInstance.post('/auth/forgot', {\r\n                email, message: `<div style=\"background-color: lime; padding: 15px\">\t\r\n\tpassword recovery link: \r\n\t<a href='https://dimazharikov.github.io/Part16_dev/#/set-new-password/$token$'>\r\n\tlink</a></div>`\r\n            })\r\n        },\r\n    authMe() {\r\n        return axiosInstance.post<ResponseTypeProfile>('/auth/me')\r\n    },\r\n    changeName(name:string) {\r\n        return axiosInstance.put<{ updatedUser: ResponseTypeProfile }>('/auth/me', {name: name})\r\n    },\r\n    changePas(password:string, token:string){\r\n        return axiosInstance.post('/auth/set-new-password', {password:password,\r\n            resetPasswordToken:token})\r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\nexport const ApiRegistration = {\r\n    register(email: string, password: string) {\r\n        return axiosInstance.post <ResponseTypeRegistration>('auth/register', {email, password})\r\n    }\r\n}","export interface stateProps {\r\n    isInitial: boolean\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isInitial: false,\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_INITIAL_APP = 'APP/INITIAL_APP',\r\n\r\n}\r\n\r\n//actions\r\nexport type AppType = ReturnType<typeof setInitialApp>\r\n\r\n\r\nexport const AppReducer = (state: stateProps = initialState, action: AppType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_INITIAL_APP:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialApp = (isInitial:boolean) => ({type:ActionType.SET_INITIAL_APP, payload:{isInitial}})\r\n\r\n\r\n\r\n","import {ApiAuth} from \"../../API/Api\";\r\nimport {setProfileAc} from \"../ProfileReducer/ProfileReducer\";\r\nimport {AppThunk} from \"../Store\";\r\nimport {setInitialApp} from \"../AppReducer/AppReducer\";\r\n\r\nexport type RequestStatusType = 'loading' | 'succeeded' | 'failed'\r\n\r\nexport interface stateProps {\r\n    isLogin: boolean\r\n    status: RequestStatusType\r\n    errorMes: string | undefined\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isLogin: false,\r\n    status: \"succeeded\",\r\n    errorMes: undefined\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_LOGIN = 'AUTH/SET_LOGIN',\r\n    SET_STATUS = 'AUTH/SET_STATUS',\r\n    SET_ERROR_MES = 'AUTH/SET_ERROR_MES'\r\n}\r\n\r\n//actions\r\n\r\n// interface Action<T> {\r\n//     type: ActionType,\r\n//     payload: T\r\n// }\r\n\r\n\r\nconst AuthReducer = (state: stateProps = initialState, action: AuthType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_LOGIN:\r\n            return {...state, ...action.payload}\r\n        case ActionType.SET_STATUS: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ActionType.SET_ERROR_MES:\r\n            return {...state, ...action.payload}\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setLoginAC = (isLogin: boolean) => ({type: ActionType.SET_LOGIN, payload: {isLogin}})\r\nexport const setStatusAC = (status: RequestStatusType) => ({type: ActionType.SET_LOGIN, payload: {status}})\r\n\r\nexport const setErrorMes = (errorMes: string) => ({type: ActionType.SET_ERROR_MES, payload: {errorMes}})\r\nexport const setLoginT = (email: string, password: string, rememberMe: boolean): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch(setProfileAc(res.data))\r\n            dispatch(setLoginAC(true))\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setErrorMes(error))\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\nexport const setLogOut = (): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.logOut()\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setLoginAC(false))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setErrorMes(error))\r\n            console.log('Error:', {...e})\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\nexport const setAuthMe = (): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.authMe()\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setProfileAc(res.data))\r\n            dispatch(setLoginAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setLoginAC(false))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setInitialApp(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const setChangeName = (name: string): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.changeName(name)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setProfileAc(res.data.updatedUser))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setErrorMes(error))\r\n            console.log('Error:', {...e})\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\n\r\nexport type AuthType = ReturnType<typeof setLoginAC> | ReturnType<typeof setStatusAC> | ReturnType<typeof setErrorMes>\r\n\r\nexport default AuthReducer","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {AppRootStateType} from \"../Store\";\r\nimport {ApiRegistration, ResponseTypeRegistration} from \"../../API/Api\";\r\n\r\n\r\nexport interface dataProps {\r\n    email: string,\r\n    error: string | undefined\r\n}\r\n\r\n\r\nexport interface stateProps {\r\n    isRegistration: boolean,\r\n    status: RequestStatusType;\r\n    data: dataProps\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isRegistration: false,\r\n    status: \"succeeded\",\r\n    data : {\r\n        email: '',\r\n        error: undefined\r\n    }\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_IS_REGISTRATION = \"REGISTRATION_CONTAINER/SET_IS_REGISTRATION\",\r\n    SET_STATUS = \"REGISTRATION_CONTAINER/SET_STATUS\",\r\n    SET_DATA = \"REGISTRATION_CONTAINER/SET_DATA\",\r\n    SET_ERROR  = \"REGISTRATION_CONTAINER/SET_ERROR\"\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n\r\n// ActionCreate\r\nexport const setRegistration = (isRegistration: boolean): Action<boolean> => ({\r\n    type: ActionType.SET_IS_REGISTRATION,\r\n    payload: isRegistration\r\n});\r\n\r\n\r\nexport const setStatus = (status : RequestStatusType): Action<RequestStatusType> => ({\r\n    type: ActionType.SET_STATUS,\r\n    payload: status\r\n});\r\n\r\nexport const setData = (data: {\r\n    email: string,  error?: string | undefined\r\n}): Action<{ email: string, error?: string | undefined }> => ({\r\n    type: ActionType.SET_DATA,\r\n    payload: data\r\n})\r\nexport const setError = (error: string | undefined): Action< string | undefined > => ({\r\n    type: ActionType.SET_ERROR,\r\n    payload: error\r\n})\r\n\r\n\r\n\r\n//Thunk\r\nexport const putData = (email: string, password: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>) => {\r\n        dispatch(setStatus('loading'))\r\n        ApiRegistration.register(email, password)\r\n            .then (res => {\r\n                dispatch(setStatus(\"succeeded\"))\r\n                dispatch(setRegistration(true))\r\n            })\r\n            .catch(e => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.response.data.error + 'check console')\r\n                console.log(error)\r\n                console.log('errors:', {...e})\r\n                dispatch(setError(error))\r\n                dispatch(setStatus(\"failed\"))\r\n            })\r\n            .finally(()=> dispatch(setRegistration(false)))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst RegistrationReducer = (state: stateProps = initialState, action: Action<boolean & RequestStatusType>): stateProps => {\r\n    switch (action.type) {\r\n        //initial Data\r\n        case ActionType.SET_DATA:\r\n            return {...state, data: action.payload}\r\n        //values from UI for push Email and password if VALID\r\n        case ActionType.SET_ERROR: {\r\n            return {...state, data: {...state.data, error: action.payload}}\r\n        }\r\n        case ActionType.SET_IS_REGISTRATION:\r\n            return {\r\n                ...state, isRegistration: action.payload\r\n            };\r\n        //values from UI for push Password\r\n        case ActionType.SET_STATUS:\r\n            return {\r\n                ...state, status: action.payload\r\n            };\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n//types\r\ntype TypeActions = ReturnType<typeof setData> |\r\n    ReturnType<typeof setRegistration> |\r\n    ReturnType<typeof setStatus> | ReturnType<typeof setError>\r\n\r\nexport default RegistrationReducer","import React, { Fragment } from \"react\";\r\nimport s from './Spinner.module.scss';\r\n\r\nconst Spinner = () => {\r\n\r\n    let arrStyle = [];\r\n    for (let i = 1; i < 21; i++) {\r\n        arrStyle.push({\"--i\": i} as React.CSSProperties)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <section>\r\n                <div className={s.loader}>\r\n                    {\r\n                        arrStyle.map((item, inx) => {\r\n                            return <span style={item} key={inx}/>\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export const validateInputNewPas = (setPassword:Function, value:string, setErrorMesPas:Function, setErrorPas:Function) => {\r\n    const rePassword = /(?=.*\\d)(?=.*[a-zA-Z]).{6,}/;\r\n    setPassword(value)\r\n    if (value.trim() === '') {\r\n        setErrorMesPas('Password Required')\r\n        setErrorPas(true)\r\n    } else if (!rePassword.test(value)) {\r\n        console.log(rePassword.test(value))\r\n        setErrorPas(true)\r\n        setErrorMesPas('the password must contain one digit, and length must be 6 and more')\r\n\r\n    } else {\r\n        setErrorMesPas('')\r\n        setErrorPas(false)\r\n    }\r\n\r\n}","import {FC, useState} from \"react\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperCheckbox from \"../../../Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport style from './AuthContainer.module.css'\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport {setErrorMes, setLoginT} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport {validateInputNewPas} from \"../../../Utils/Validation/ValidationPassword\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AuthContainer: FC<Props> = () => {\r\n    const reEmail = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n\r\n    const [email, setEmail] = useState<string>()\r\n    const [errorLog, setErrorLog] = useState<boolean>(false)\r\n    const [password, setPassword] = useState<string>()\r\n    const [errorMesLog, setErrorMesLog] = useState<string>('Login Required')\r\n    const [errorMesPas, setErrorMesPas] = useState<string>('Password Required')\r\n    const [errorPas, setErrorPas] = useState<boolean>(false)\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const status = useSelector((state: AppRootStateType) => state.auth.status)\r\n    const errordata = useSelector((state: AppRootStateType) => state.auth.errorMes)\r\n    console.log(errordata)\r\n    const dispatch = useDispatch()\r\n    const validateInputLog = (value: string) => {\r\n        setEmail(value)\r\n        if (value.trim() === '') {\r\n            setErrorMesLog('Email Required')\r\n            setErrorLog(true)\r\n\r\n        } else if (!reEmail.test(value)) {\r\n            setErrorLog(true)\r\n            setErrorMesLog('Email invalid')\r\n        } else {\r\n            setErrorMesLog('')\r\n            setErrorLog(false)\r\n        }\r\n    }\r\n    const changeInputValuePassword = (value: string) => {\r\n        validateInputNewPas(setPassword, value, setErrorMesPas, setErrorPas)\r\n    }\r\n    const logHandler = () => {\r\n\r\n        if (email && password) {\r\n            dispatch(setLoginT(email, password, check))\r\n        } else {\r\n            dispatch(setErrorMes('Password and Email Required'))\r\n        }\r\n\r\n    }\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.auth_main}>\r\n                <h3>Login</h3>\r\n                <div className={style.auth_wrapper}>\r\n                    <div className={style.input_block}>\r\n                        <SuperInputText\r\n                            value={email}\r\n                            onChangeText={validateInputLog}\r\n                            error={errorLog}\r\n                            placeholder={'E-mail'}\r\n                            errorMes={errorMesLog}\r\n                            setError={setErrorLog}\r\n                            className={'otherInput'}\r\n\r\n                        />\r\n                        <SuperInputText\r\n                            value={password}\r\n                            onChangeText={changeInputValuePassword}\r\n                            error={errorPas}\r\n                            placeholder={'Password'}\r\n                            errorMes={errorMesPas}\r\n                            setError={setErrorPas}\r\n                            type={'password'}\r\n                            className={'otherInput'}\r\n                        />\r\n                        <div className={style.auth_link}>\r\n                            <span><NavLink to={RoutingType.registration}>Registration</NavLink></span>\r\n                            <span><NavLink to={RoutingType.resPass}>Forgot Pas?</NavLink></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.btn_check}>\r\n                        <SuperCheckbox\r\n                            onChangeChecked={setCheck}\r\n                        > Remember </SuperCheckbox>\r\n                        <SuperButton\r\n                            onClick={logHandler}\r\n                            disabled={status === 'loading'}\r\n                        >\r\n                            Login\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    status === 'loading'\r\n                        ? <Spinner/>\r\n                        : status === 'failed'\r\n                        ? <div>\r\n                            <h5 className={style.errorMesOp}> {errordata}</h5></div>\r\n                        : ''\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AuthContainer","import {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {AppThunk} from \"../Store\";\r\nimport {ApiAuth} from \"../../API/Api\";\r\n\r\nexport interface stateProps {\r\n    checkWith: boolean\r\n    status: RequestStatusType\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    checkWith: false,\r\n    status: \"succeeded\"\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_CHECK_WITH = 'RES-PASS/SET-CHECK-WITH',\r\n    SET_STATUS = 'RES-PASS/SET_STATUS'\r\n}\r\n\r\n\r\n//actions\r\n\r\nexport const setStatus = (status: RequestStatusType) => ({type: ActionType.SET_STATUS, payload: {status}})\r\nexport const setChekWith = (checkWith: boolean) => ({type: ActionType.SET_CHECK_WITH, payload: {checkWith}})\r\n\r\n\r\nconst ResPasswordReducer = (state: stateProps = initialState, action: ResPasswordType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_STATUS: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ActionType.SET_CHECK_WITH: {\r\n            return {...state, ...action.payload}\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setChekWithThunk = (email: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatus('loading'))\r\n    try {\r\n        await ApiAuth.recovery(email)\r\n        dispatch(setChekWith(true))\r\n        dispatch(setStatus('succeeded'))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(setStatus('failed'))\r\n    }\r\n\r\n}\r\n\r\nexport type ResPasswordType = ReturnType<typeof setStatus> | ReturnType<typeof setChekWith>\r\n\r\nexport default ResPasswordReducer","import {FC, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {RequestStatusType} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport {dataProps, putData} from \"../../../Redux/RegistrationReducer/RegistartionReducer\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport style from './Registration.module.scss'\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst RegistrationContainer: FC<Props> = ({\r\n                                              ...props\r\n                                          }) => {\r\n    //reducer variable\r\n    const isRegistration = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistration);\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.registration.status);\r\n    const data = useSelector<AppRootStateType, dataProps>( state => state.registration.data)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    //validate Email with Password\r\n    const reEmail = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    const rePassword = /(?=.*\\d)(?=.*[a-zA-Z]).{6,}/;\r\n\r\n\r\n    //values of Email, Password, Confirm Password\r\n    const [email, setEmail] = useState<string>(data.email)\r\n    const [password, setPassword] = useState<string>()\r\n    const [confirmPassword, setConfirmPassword] = useState<string>()\r\n\r\n\r\n    //isValid of Email, Password, Confirm Password\r\n    const [isValidEmail, setIsValidEmail] = useState<boolean>(false)\r\n    const [isValidPassword, setIsValidPassword] = useState<boolean>(false)\r\n    const [isValidConfirmPassword, setIsValidConfirmPassword] = useState<boolean>(false)\r\n\r\n\r\n    //Error\r\n    const [errorEmail, setErrorEmail] = useState<string>('Login Required')\r\n    const [errorPassword, setErrorPassword] = useState<string>('Password must be with number and A-Z, a-z letters, length must be 6 and more')\r\n    const [errorConfirmPassword, setErrorConfirmPassword] = useState<string>('passwords must match')\r\n\r\n\r\n\r\n\r\n    //validate for Email\r\n    const isValidateEmailReg = (value: string) => {\r\n        setEmail(value)\r\n        if (value.trim() === '') {\r\n            setErrorEmail('Email is Required')\r\n            setIsValidEmail(true)\r\n\r\n        } else\r\n            // if value inValid of reEmail\r\n        if (!reEmail.test(value)) {\r\n            setErrorEmail('Invalid Email')\r\n            setIsValidEmail(true)\r\n\r\n        } else {\r\n            // else value email valid of reEmail\r\n            setErrorEmail('')\r\n            setIsValidEmail(false)\r\n\r\n        }\r\n    }\r\n    //validate for Password\r\n    const validatePassword = (value: string) => {\r\n        setPassword(value)\r\n        if (value.trim() === '' && value.length > 8) {\r\n\r\n            setIsValidPassword(true)\r\n            setErrorPassword('Password area is Required')\r\n\r\n        } else if (!rePassword.test(value)) {\r\n            setIsValidPassword(true)\r\n            setErrorPassword('the password must contain one digit, and length must be 8 and more')\r\n        } else {\r\n            setIsValidPassword(false)\r\n            setErrorPassword('')\r\n        }\r\n    }\r\n    //validate for ConfirmPassword\r\n    // confirmValue === passwordValue => true , else error\r\n    const validateConfirmPassword = (value: string) => {\r\n        setConfirmPassword(value)\r\n\r\n        if (value !== password) {\r\n            setIsValidConfirmPassword(true)\r\n            setErrorConfirmPassword('Passwords must be the sames!')\r\n\r\n        } else {\r\n            setIsValidConfirmPassword(false)\r\n            setErrorConfirmPassword('')\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //if validate false and email area is valid => registration , btnDisabled - false\r\n    const onRegistrationHandler = () => {\r\n        if (email && password && confirmPassword) {\r\n            dispatch(putData(email, password))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // reducer registration changed on True if all input valid\r\n    if (isRegistration) {\r\n        return <Redirect to={RoutingType.auth}/>\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<div className={style.container}>\r\n        <h1>Registration</h1>\r\n        <Paper className={style.reg_wrapper}>\r\n            {/*Email*/}\r\n            <h2>E-mail:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    value={email}\r\n                    onChangeText={isValidateEmailReg}\r\n                    error={isValidEmail}\r\n                    placeholder={'E-mail'}\r\n                    errorMes={errorEmail}\r\n                    setError={setIsValidEmail}\r\n                    className={'otherInput'}\r\n\r\n                />\r\n            </Paper>\r\n\r\n\r\n            {/*password*/}\r\n\r\n                <h2>Password:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    value={password}\r\n                    onChangeText={validatePassword}\r\n                    error={isValidPassword}\r\n                    placeholder={'Password'}\r\n                    errorMes={errorPassword}\r\n                    setError={setIsValidPassword}\r\n                    className={'otherInput'}\r\n                    type={'password'}\r\n                />\r\n            </Paper>\r\n\r\n\r\n\r\n\r\n\r\n            {/*confirm password*/}\r\n            <h2>Confirm Password:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    value={confirmPassword}\r\n                    onChangeText={validateConfirmPassword}\r\n                    error={isValidConfirmPassword}\r\n                    placeholder={'Confirm Password'}\r\n                    errorMes={errorConfirmPassword}\r\n                    setError={setIsValidPassword}\r\n                    className={'otherInput'}\r\n                    type={'password'}\r\n                />\r\n            </Paper>\r\n\r\n        </Paper>\r\n        <div>\r\n            <SuperButton\r\n                onClick={onRegistrationHandler}\r\n                disabled={status === 'loading'}\r\n                className={style.btn}\r\n            >\r\n                Registration\r\n            </SuperButton>\r\n        </div>\r\n\r\n    <div>\r\n        {\r\n            status === 'loading'\r\n                ? <Spinner/>\r\n                : status === 'failed'\r\n                ? <div>\r\n                    <h1>{data.error}</h1></div>\r\n                : ''\r\n        }\r\n    </div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default RegistrationContainer\r\n","import React, {FC} from 'react';\r\nimport style from './Modal.module.scss'\r\n\r\n\r\ninterface ModalType {\r\n    modal: boolean\r\n    setModal: (value: boolean) => void\r\n}\r\n\r\n\r\nconst Modal: FC<ModalType> = ({modal, setModal, children}) => {\r\n    const finalModalClassName = `${style.modal} ${modal ? style.active : \"\"}`;\r\n    const finalModalContentClassName = `${style.modal_content} ${modal ? style.active : \"\"}`;\r\n    return (\r\n        <div className={finalModalClassName} onClick={ () => setModal(false)}>\r\n            <div className={finalModalContentClassName} onClick={e =>  e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {FC, useState} from 'react';\r\nimport SuperInputText from \"../../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../../Components/c2-SuperButton/SuperButton\";\r\nimport Modal from \"../../../../Components/Modal/Modal\";\r\nimport {setChangeName} from \"../../../../Redux/AuthReducer/AuthReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from \"../ProfileContainer.module.scss\";\r\ninterface Props {\r\n    errorMes?: string\r\n}\r\nconst ProfileChangeName:FC<Props> = ({errorMes}) => {\r\n\r\n    const [name, setName] = useState<string>()\r\n    const [modal, setModal] = useState<boolean>(false)\r\n    const dispatch = useDispatch();\r\n    const changeNameHandler = () => {\r\n        if (name) {\r\n            dispatch(setChangeName(name))\r\n            setModal(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <span className={style.change_name} onClick={() => setModal(true)}>Change name</span>\r\n            <Modal\r\n                modal={modal}\r\n                setModal={setModal}\r\n            >\r\n                <SuperInputText\r\n                    value={name}\r\n                    onChangeText={setName}\r\n                    placeholder={'New-Name'}\r\n\r\n                />\r\n                <SuperButton onClick={changeNameHandler}>Change Name</SuperButton>\r\n                {!!errorMes? <span>errorMes</span> : null}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileChangeName;","import React, {FC} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport {setLogOut} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport style from './ProfileContainer.module.scss'\r\nimport ProfileChangeName from \"./ProfileChangeName/ProfileChangeName\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ProfileContainer: FC<Props> = () => {\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const profile = useSelector((state: AppRootStateType) => state.profile.profile)\r\n    const status = useSelector((state: AppRootStateType) => state.auth.status)\r\n    const errorMes = useSelector((state: AppRootStateType) => state.auth.errorMes)\r\n    const dispatch = useDispatch();\r\n    console.log(document.cookie)\r\n\r\n\r\n    if (!isLogin || !profile) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    const logOutHandler = () => {\r\n        dispatch(setLogOut())\r\n    }\r\n    if (status === \"loading\") {\r\n        return <Spinner/>\r\n    } else if (status === \"failed\") {\r\n        return (\r\n            <div>\r\n                <h1>something wrong</h1>\r\n            </div>\r\n        )\r\n    }\r\n    if (profile) {\r\n        return (\r\n            <div className={style.profile_main_wrapper}>\r\n                <div>\r\n                    <h1>Profile</h1>\r\n                </div>\r\n                <div className={style.profile_item_wrapper}>\r\n                    <div className={style.profile_item}><span className={style.item_title}>E-mail:</span> <span>{profile.email}</span></div>\r\n                    <div className={style.profile_item}><span className={style.item_title}>name:</span> <span>{profile.name}</span>\r\n                        <ProfileChangeName errorMes={errorMes}/>\r\n                    </div>\r\n                    <div className={style.profile_item}><span className={style.item_title}>id:</span><span>{profile._id}</span></div>\r\n                </div>\r\n                <Link to={RoutingType.auth} onClick={logOutHandler}>\r\n                    <span>Log Out</span>\r\n                </Link>\r\n\r\n            </div>)\r\n    } else {\r\n        return <div/>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ProfileContainer","import {FC} from \"react\";\r\n\r\ninterface Props {\r\n    title: string\r\n}\r\n\r\n\r\nconst ResPassword: FC<Props> = ({\r\n                                   title, ...props\r\n                                }) => {\r\n    return (<div>\r\n        <h3>{title}</h3>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ResPassword","import {AppThunk} from \"../Store\";\r\nimport {ApiAuth} from \"../../API/Api\";\r\n\r\n\r\nexport interface stateProps {\r\n    changeMes: boolean\r\n    errorMes?: string\r\n    loading: boolean\r\n\r\n\r\n}\r\n//Type\r\nexport enum ActionType {\r\n    NEW_CHANGE_MES = 'NEW_PAS/NEW_CHANGE_MES',\r\n    ERROR_MES = 'NEW_PAS/ERROR_MES',\r\n    LOADING = 'NEW_PAS/LOADING'\r\n}\r\n\r\nconst initialState: stateProps = {\r\n    changeMes: false,\r\n    errorMes: undefined,\r\n    loading:false\r\n}\r\n//actions\r\nexport const setNewMes = (changeMes:boolean) => ({type:ActionType.NEW_CHANGE_MES, payload:{changeMes}})\r\nexport const setErrorMes = (errorMes:string) => ({type:ActionType.ERROR_MES, payload: {errorMes}})\r\nconst loadingNewPas = (loading:boolean) => ({type:ActionType.LOADING, payload:{loading}})\r\n\r\nexport type NewMesActionType = ReturnType<typeof setNewMes> | ReturnType<typeof setErrorMes>| ReturnType<typeof loadingNewPas>\r\n\r\n\r\n\r\n\r\nconst NewPasswordReducer = (state: stateProps = initialState, action: NewMesActionType): stateProps => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.NEW_CHANGE_MES:\r\n            return {...state, ...action.payload}\r\n        case ActionType.ERROR_MES:\r\n            return {...state, ...action.payload}\r\n        case ActionType.LOADING:\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const ChangePassword = (password: string, token:string):AppThunk => (dispatch) => {\r\n    dispatch(loadingNewPas(true))\r\n    ApiAuth.changePas(password, token)\r\n        .then(res => {\r\n            dispatch(setNewMes(true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setErrorMes(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingNewPas(false))\r\n            dispatch(setNewMes(false))\r\n        })\r\n}\r\n\r\nexport default NewPasswordReducer","import {FC} from \"react\";\r\nimport ResPasswordComponent from \"./ResPasswordComponent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from 'formik';\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport style from './ResPassword.module.css'\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport {setChekWithThunk} from \"../../../Redux/ResPassReducer/ResPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ntype ErrorType = {\r\n    email?: string\r\n}\r\n\r\n\r\nconst ResPasswordContainer : FC <Props> = ({\r\n     ...props\r\n}) => {\r\n\r\n    const checkWith  = useSelector((state: AppRootStateType) => state.resPas.checkWith)\r\n    const status  = useSelector((state: AppRootStateType) => state.resPas.status)\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        onSubmit: (values) => {\r\n           dispatch( setChekWithThunk(values.email) )\r\n            formik.resetForm();\r\n        },\r\n        validate: (values) => {\r\n            const errors: ErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            return errors;\r\n        }\r\n    });\r\n\r\n\r\n    if(status === \"loading\") {\r\n        return <Spinner/>\r\n    } else if (status === \"failed\") {\r\n        return (\r\n            <div>\r\n                <h1>something wrong</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (checkWith) {\r\n        return  <Redirect to={RoutingType.auth}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.res_Password_wrapper}>\r\n\r\n        <ResPasswordComponent title = {'Reset Password Page'}/>\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n            <div className={style.input_style}>\r\n                <SuperInputText\r\n                    type={'email'}\r\n                    placeholder={'E-mail'}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n            </div>\r\n            {\r\n                formik.touched.email && formik.errors.email\r\n                    ? <div className={style.error}>{formik.errors.email}</div> : null\r\n            }\r\n\r\n            <SuperButton type={'submit'} >\r\n                Send email\r\n            </SuperButton>\r\n        </form>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default ResPasswordContainer","import {FC} from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport AuthContainer from \"../PagesApp/WrappedPages/AuthPage/AuthContainer\";\r\nimport RegistrationContainer from \"../PagesApp/WrappedPages/RegistartionPage/RegistrationContainer\";\r\nimport ProfileContainer from \"../PagesApp/WrappedPages/ProfilePage/ProfileContainer\";\r\nimport ResPasswordContainer from \"../PagesApp/WrappedPages/ResPasswordPage/ResPasswordContainer\";\r\nimport NewPasswordContainer from \"../PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer\";\r\nimport ErrorContainer from \"../PagesApp/WrappedPages/ErrorPage/ErrorContainer\";\r\n\r\n\r\nexport enum RoutingType {\r\n    auth=\"/auth\",\r\n    registration = \"/registration\",\r\n    profile = \"/profile\",\r\n    error=\"/404\",\r\n    resPass = \"/resPassword\",\r\n    newPass =\"/set-new-password\"\r\n}\r\n\r\n\r\n\r\n\r\nconst Routes : FC = () => {\r\n    return (<div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={RoutingType.profile}/>}/>\r\n                <Route exact path={RoutingType.auth} render={()=> <AuthContainer/>}/>\r\n                <Route exact path = {RoutingType.registration} render ={()=> <RegistrationContainer/>}/>\r\n                <Route exact path = {RoutingType.profile} render = {()=><ProfileContainer/>}/>\r\n                <Route exact path = {RoutingType.resPass} render = {()=> <ResPasswordContainer/>}/>\r\n                <Route path = {RoutingType.newPass} render = {()=> <NewPasswordContainer/>}/>\r\n                <Route path={RoutingType.error} render={()=> <ErrorContainer/>}/>\r\n                <Redirect from={'*'} to={RoutingType.error}/>\r\n            </Switch>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default Routes;","import React, {FC, useState} from \"react\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {validateInputNewPas} from \"../../../Utils/Validation/ValidationPassword\";\r\nimport {ChangePassword} from \"../../../Redux/NewPassReducer/NewPassReducer\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport style from './NewPasswordContainer.module.scss'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst NewPasswordContainer: FC<Props> = () => {\r\n    const [password, setPassword] = useState<string>()\r\n    const [confirmPassword, setConfirmPassword] = useState<string>()\r\n    const [errorMesPas, setErrorMesPas] = useState<string>('Password Required')\r\n    const [errorMesConfirmPas, setErrorMesConfirmPas] = useState<string>('Confirm password Required\\'')\r\n    const [isValidPassword, setIsValidPassword] = useState<boolean>(true)\r\n    const [isValidConfirmPassword, setIsValidConfirmPassword] = useState<boolean>(false)\r\n    const errorMes = useSelector((state: AppRootStateType) => state.newPas.errorMes)\r\n    const loading = useSelector((state: AppRootStateType) => state.newPas.loading)\r\n    const isChange = useSelector((state: AppRootStateType) => state.newPas.changeMes)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const history = useHistory()\r\n    const regUrl = /(\\/.+\\/)/gm\r\n\r\n    const token = history.location.pathname.replace(regUrl, \"\")\r\n\r\n    const validPasswordValue = (value: string) => {\r\n        validateInputNewPas(setPassword, value, setErrorMesPas, setIsValidPassword)\r\n    }\r\n    const validConfirmPasswordValue = (value: string) => {\r\n        validateInputNewPas(setConfirmPassword, value, setErrorMesConfirmPas, setIsValidConfirmPassword)\r\n        if (value !== password) {\r\n            setIsValidConfirmPassword(true)\r\n            setErrorMesConfirmPas('passwords must match')\r\n        } else {\r\n            setIsValidConfirmPassword(false)\r\n        }\r\n    }\r\n    const changePasswordHandler = () => {\r\n        if (password) {\r\n            dispatch(ChangePassword(password, token))\r\n        }\r\n        setPassword('')\r\n    }\r\n    if(isChange) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    return (\r\n        <div className={style.wrapper_main}>\r\n            <div className={style.wrapper_items}>\r\n                <SuperInputText\r\n                    value={password}\r\n                    onChangeText={validPasswordValue}\r\n                    placeholder={'New Password'}\r\n                    error={isValidPassword}\r\n                    errorMes={errorMesPas}\r\n                    setError={setIsValidPassword}\r\n                    type={'password'}\r\n                />\r\n                <SuperInputText\r\n                    value={confirmPassword}\r\n                    onChangeText={validConfirmPasswordValue}\r\n                    placeholder={'Confirm Password'}\r\n                    error={isValidConfirmPassword}\r\n                    errorMes={errorMesConfirmPas}\r\n                    setError={setIsValidConfirmPassword}\r\n                    type={'password'}\r\n                />\r\n                <div><SuperButton onClick={changePasswordHandler} disabled={loading || password !== confirmPassword}>Change\r\n                    password</SuperButton></div>\r\n                {loading ? <Spinner/> : null}\r\n                {!!errorMes ? <span>errorMes</span> : null}\r\n\r\n            </div>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default NewPasswordContainer","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Error404.module.css'\r\n\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div className={style.wrapped}>\r\n            <figure>\r\n                <div className={style.sadMac}/>\r\n                <NavLink to={'/'}>\r\n                    GO TO HOME\r\n                </NavLink>\r\n                <figcaption>\r\n                    <span className={style.srText}>Error 404: Not Found</span>\r\n                    <span className={style.e}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style._4}/>\r\n                    <span className={style._0}/>\r\n                    <span className={style._4}/>\r\n                    <span className={style.n}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.t}/>\r\n                    <span className={style.f}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.u}/>\r\n                    <span className={style.n}/>\r\n                    <span className={style.d}/>\r\n                </figcaption>\r\n\r\n            </figure>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404;","import {FC} from \"react\";\r\nimport Error404 from \"./Error404\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ErrorContainer: FC<Props> = () => {\r\n    return (<div>\r\n        <Error404/>\r\n    </div>)\r\n}\r\n\r\nexport default ErrorContainer\r\n\r\n","export interface stateProps {\r\n\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ErrorReducer = (state: stateProps = initialState, action: Action<any>): stateProps => {\r\n    switch (action.type) {\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport default ErrorReducer","import {FC} from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport style from './NavigationContainer.module.scss'\r\n\r\nconst NavigationContainer: FC = () => {\r\n\r\n    return (\r\n    <nav>\r\n        <div className={style.wrapper}>\r\n            <NavLink\r\n                to={RoutingType.auth}\r\n                activeClassName={style.active}\r\n            >Auth</NavLink>\r\n            <NavLink\r\n                to={RoutingType.registration}\r\n                activeClassName={style.active}\r\n            >Registration</NavLink>\r\n            <NavLink\r\n                to={RoutingType.profile}\r\n                activeClassName={style.active}\r\n            >Profile</NavLink>\r\n            <NavLink\r\n                to={RoutingType.resPass}\r\n                activeClassName={style.active}\r\n            >Password Recovery</NavLink>\r\n            <NavLink\r\n                to={RoutingType.error}\r\n                activeClassName={style.active}\r\n            >ERROR</NavLink>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default NavigationContainer","import React, {FC, useEffect} from 'react';\r\nimport './App.css';\r\nimport NavigationContainer from \"./PagesApp/StaticPages/Navigation/NavigationContainer\";\r\nimport Routes from \"./Routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./Redux/Store\";\r\nimport Spinner from \"./Common/preloader/Spinner\";\r\nimport {setAuthMe} from './Redux/AuthReducer/AuthReducer';\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const isInitial = useSelector((state: AppRootStateType) => state.app.isInitial)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setAuthMe())\r\n    }, [])\r\n\r\n    if(!isInitial) {\r\n        return <Spinner/>\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <NavigationContainer/>\r\n        <div className={'container'}>\r\n            <Routes/>\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport { combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport AuthReducer, { AuthType } from \"./AuthReducer/AuthReducer\";\r\nimport NewPassReducer, {NewMesActionType} from \"./NewPassReducer/NewPassReducer\";\r\nimport ErrorReducer from \"./ErrorReducer/ErrorReducer\";\r\nimport ProfileReducer, { ActionProfileType } from \"./ProfileReducer/ProfileReducer\";\r\nimport  RegistrationReducer from \"./RegistrationReducer/RegistartionReducer\";\r\nimport ResPasswordReducer, {ResPasswordType} from \"./ResPassReducer/ResPasswordReducer\";\r\n\r\n\r\nimport {AppReducer, AppType } from './AppReducer/AppReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    auth: AuthReducer,\r\n    newPas: NewPassReducer,\r\n    error: ErrorReducer,\r\n    profile: ProfileReducer,\r\n    registration:  RegistrationReducer,\r\n    resPas: ResPasswordReducer,\r\n    app: AppReducer\r\n})\r\n\r\n\r\nconst middleware = applyMiddleware(thunkMiddleware)\r\n\r\n\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(middleware));\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\nexport type AppActionType = AuthType | ActionProfileType | AppType | NewMesActionType | ResPasswordType\r\n\r\n\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AppActionType\r\n    >\r\n\r\nexport default store\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/Store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_main_wrapper\":\"ProfileContainer_profile_main_wrapper__2a3Dk\",\"profile_item_wrapper\":\"ProfileContainer_profile_item_wrapper__XPMEa\",\"profile_item\":\"ProfileContainer_profile_item__-cCfy\",\"item_title\":\"ProfileContainer_item_title__10420\",\"change_name\":\"ProfileContainer_change_name__2W3Xx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_wrapper\":\"AuthContainer_auth_wrapper__3xmiu\",\"auth_main\":\"AuthContainer_auth_main__55BT0\",\"container\":\"AuthContainer_container__2Fyee\",\"auth_link\":\"AuthContainer_auth_link__1H-Fo\",\"input_block\":\"AuthContainer_input_block__2jeT6\",\"btn_check\":\"AuthContainer_btn_check__2t9Ni\",\"errorMesOp\":\"AuthContainer_errorMesOp__r6aXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NavigationContainer_wrapper__3XXBF\",\"active\":\"NavigationContainer_active__3-qgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3j43T\",\"errorInput\":\"SuperInputText_errorInput__3LuDo\",\"error\":\"SuperInputText_error__SXMyI\",\"otherInput\":\"SuperInputText_otherInput__357lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2x7V_\",\"modal_content\":\"Modal_modal_content__htyMa\",\"active\":\"Modal_active__3Woi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg_wrapper\":\"Registration_reg_wrapper__HTqCc\",\"container\":\"Registration_container__kwRfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"res_Password_wrapper\":\"ResPassword_res_Password_wrapper__3SEjR\",\"error\":\"ResPassword_error__1r8lw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1jVN_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3ovd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__2YlOl\",\"button_red\":\"SuperButton_button_red__27PBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_main\":\"NewPasswordContainer_wrapper_main__2o0wu\",\"wrapper_items\":\"NewPasswordContainer_wrapper_items__1DBeO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1n8Zh\",\"animates\":\"Spinner_animates__qkhBs\",\"animateBg\":\"Spinner_animateBg__SDpl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapped\":\"Error404_wrapped__2cju2\",\"sadMac\":\"Error404_sadMac__18_lj\",\"srText\":\"Error404_srText__1QIQw\",\"_0\":\"Error404__0__33zfg\",\"_4\":\"Error404__4__2weUf\",\"d\":\"Error404_d__1DG7G\",\"e\":\"Error404_e__1CWJu\",\"f\":\"Error404_f__36djJ\",\"n\":\"Error404_n__1_g75\",\"o\":\"Error404_o__2hPGy\",\"r\":\"Error404_r__xG2zs\",\"t\":\"Error404_t__2bRXN\",\"u\":\"Error404_u__mp2gD\"};"],"sourceRoot":""}