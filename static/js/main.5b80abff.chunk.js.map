{"version":3,"sources":["Redux/ProfileReducer/ProfileReducer.ts","Components/c1-SuperInputText/SuperInputText.tsx","Components/c3-SuperCheckbox/SuperCheckbox.tsx","Components/c2-SuperButton/SuperButton.tsx","API/Api.ts","Redux/AppReducer/AppReducer.ts","Redux/AuthReducer/AuthReducer.ts","Redux/RegistrationReducer/RegistartionReducer.ts","Common/preloader/Spinner.tsx","Utils/Validation/ValidationPassword.tsx","PagesApp/WrappedPages/AuthPage/AuthContainer.tsx","Redux/ResPassReducer/ResPasswordReducer.ts","PagesApp/WrappedPages/RegistartionPage/RegistrationContainer.tsx","Components/Modal/Modal.tsx","PagesApp/WrappedPages/ProfilePage/ProfileChangeName/ProfileChangeName.tsx","PagesApp/WrappedPages/ProfilePage/ProfileContainer.tsx","PagesApp/WrappedPages/ResPasswordPage/ResPasswordComponent.tsx","Redux/NewPassReducer/NewPassReducer.ts","PagesApp/WrappedPages/ResPasswordPage/ResPasswordContainer.tsx","Redux/PacksPageReducer/PacksPageReducer.ts","PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer.tsx","PagesApp/WrappedPages/ErrorPage/Error404.tsx","PagesApp/WrappedPages/ErrorPage/ErrorContainer.tsx","Utils/Hooks/useErrorCatch.tsx","Redux/CardsReducer/CardsReducer.ts","PagesApp/WrappedPages/PacksPage/ChengeNameInput.tsx","Components/TableWrapper/TableIttem/TableItem.tsx","Routes/Routes.tsx","PagesApp/WrappedPages/PacksPage/PacksComponent.tsx","PagesApp/WrappedPages/PacksPage/AddNewPack/AddNewPack.tsx","Components/TableWrapper/TableWrapper.tsx","Common/Paginator/PaginatorComponent.tsx","Components/c5-SuperSelect/SuperSelect.tsx","PagesApp/WrappedPages/PacksPage/PacksContainer.tsx","PagesApp/WrappedPages/CardsPage/CardsComponent.tsx","PagesApp/WrappedPages/CardsPage/CardsPageConteiner.tsx","Redux/ErrorReducer/ErrorReducer.ts","PagesApp/StaticPages/Navigation/NavigationContainer.tsx","App.tsx","reportWebVitals.ts","Redux/Store.ts","index.tsx","PagesApp/WrappedPages/ProfilePage/ProfileContainer.module.scss","PagesApp/WrappedPages/AuthPage/AuthContainer.module.css","Components/TableWrapper/TableWrapper.module.scss","PagesApp/StaticPages/Navigation/NavigationContainer.module.scss","Components/TableWrapper/TableIttem/TableItem.module.scss","Components/c1-SuperInputText/SuperInputText.module.css","Components/Modal/Modal.module.scss","Components/c2-SuperButton/SuperButton.module.css","PagesApp/WrappedPages/RegistartionPage/Registration.module.scss","PagesApp/WrappedPages/ResPasswordPage/ResPassword.module.css","Common/Paginator/Paginator.module.css","Components/c3-SuperCheckbox/SuperCheckbox.module.css","PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer.module.scss","PagesApp/WrappedPages/PacksPage/PacksContainer.module.scss","Common/preloader/Spinner.module.scss","PagesApp/WrappedPages/ErrorPage/Error404.module.css"],"names":["ActionType","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","errorMes","onBlur","setError","value","restProps","useState","ErrorBlur","setErrorBlur","finalSpanClassName","s","finalInputClassName","superInput","errorInput","e","currentTarget","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","button_default","button_red","axiosInstance","axios","create","baseURL","withCredentials","ApiAuth","email","password","rememberMe","post","delete","message","name","put","token","resetPasswordToken","ApiRegistration","ApiPack","pageCount","page","user_id","get","params","body","cardsPack","id","ApiCards","cardsPack_id","question","card","_id","initialState","profile","undefined","setProfileAc","SET_PROFILE","payload","ProfileReducer","state","action","CLEAN_PROFILE","isInitial","isLogin","status","setLoginAC","SET_LOGIN","setStatusAC","setErrorMes","SET_ERROR_MES","setAuthMe","dispatch","then","res","console","log","data","catch","response","finally","SET_INITIAL_APP","AuthReducer","SET_STATUS","Spinner","arrStyle","i","push","loader","map","item","inx","style","validateInputNewPas","setPassword","setErrorMesPas","setErrorPas","rePassword","trim","test","AuthContainer","reEmail","setEmail","errorLog","setErrorLog","errorMesLog","setErrorMesLog","errorMesPas","errorPas","check","setCheck","useSelector","auth","errordata","useDispatch","to","container","auth_main","auth_wrapper","input_block","placeholder","auth_link","RoutingType","registration","resPass","btn_check","onClick","setLoginT","disabled","errorMesOp","isRegistration","setRegistration","SET_IS_REGISTRATION","setStatus","putData","SET_ERROR","RegistrationReducer","SET_DATA","RegistrationContainer","confirmPassword","setConfirmPassword","isValidEmail","setIsValidEmail","isValidPassword","setIsValidPassword","isValidConfirmPassword","setIsValidConfirmPassword","errorEmail","setErrorEmail","errorPassword","setErrorPassword","errorConfirmPassword","setErrorConfirmPassword","Paper","reg_wrapper","length","btn","Modal","modal","setModal","finalModalClassName","active","finalModalContentClassName","modal_content","stopPropagation","ProfileChangeName","setName","change_name","updatedUser","setChangeName","ProfileContainer","document","cookie","profile_main_wrapper","profile_item_wrapper","profile_item","item_title","ResPassword","title","checkWith","ResPasswordReducer","SET_CHECK_WITH","ResPasswordContainer","resPas","formik","useFormik","initialValues","onSubmit","values","a","resetForm","validate","errors","res_Password_wrapper","ResPasswordComponent","handleSubmit","input_style","getFieldProps","touched","changeMes","loading","setNewMes","NEW_CHANGE_MES","loadingNewPas","LOADING","ChangePassword","ERROR_MES","NewPasswordReducer","NewPasswordContainer","errorMesConfirmPas","setErrorMesConfirmPas","newPas","isChange","useHistory","location","pathname","replace","wrapper_main","wrapper_items","Error404","wrapped","sadMac","srText","r","o","_4","_0","n","t","f","u","d","ErrorContainer","UseErrorCatch","cardPacks","isDisabled","pageSize","currentPage","isPrivat","IS_DISABLED","getPacksThunk","GET_PACKS","PacksPageReducer","SET_PAGE_SIZE","SET_CURRENT_PAGE","IS_PRIVAT","ChangeName","namePack","onChangeName","TableItem","props","card_wrapped","card_item","name1","name2","name3","card_item_btn","cards","getCardsThunk","GET_CARDS","CardsReducer","PacksComponent","onDeletePack","cardsCount","updated","getState","packsPage","onChangeNamePackThunk","AddNewPack","names","setNames","addNewName","TableWrapper","onClickHandler","main_wrapped","table_wrapped","title_wrapped","title_item","Paginator","totalCount","onPageChangeHandler","x","portionSize","pagesCount","Math","ceil","pages","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","filter","p","selectedPage","pageNumber","SuperSelect","options","onChangeOption","mappedOptions","el","PacksContainer","userId","useEffect","main_wrapp","seTisPrivat","addPacksThunk","setCurrentPageAC","option","setPageSizeAC","CardsComponent","onDeleteCard","onChangeNameQuestion","rating","CardsPageContainer","cardsPage","cardId","useParams","onChangedCardsThunk","addCardsThunk","Routes","path","exact","render","newPass","packs","from","NavigationContainer","wrapper","activeClassName","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorReducer","reducer","combineReducers","NewPassReducer","middleware","applyMiddleware","thunkMiddleware","store","createStore","composeWithDevTools","window","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5b80abff.chunk.js","sourcesContent":["import {ResponseTypeProfile} from '../../API/Api'\r\n\r\n\r\nexport interface stateProps {\r\n    profile?: ResponseTypeProfile\r\n\r\n}\r\n\r\n\r\nconst initialState = {\r\n    profile: undefined\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_PROFILE = 'PROFILE/SET_PROFILE',\r\n    CLEAN_PROFILE = 'PROFILE/CLEAN_PROFILE'\r\n}\r\n\r\n\r\n//actions\r\n\r\n// interface Action<T> {\r\n//     type: ActionType,\r\n//     payload: T\r\n//\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileReducer = (state: stateProps  = initialState, action: ActionProfileType): stateProps  => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.SET_PROFILE:\r\n            return {...state, profile: {...action.payload}}\r\n        case ActionType.CLEAN_PROFILE:\r\n            return {...state, profile: undefined}\r\n        default: return  state\r\n    }\r\n\r\n}\r\n\r\nexport const setProfileAc = (profile: ResponseTypeProfile ) => {\r\n    return {type: ActionType.SET_PROFILE, payload: profile} as const\r\n}\r\nexport const cleanProfile = () => {\r\n    return {type:ActionType.CLEAN_PROFILE} as const\r\n}\r\n\r\nexport type ActionProfileType = ReturnType<typeof setProfileAc> | ReturnType<typeof cleanProfile>\r\n\r\n\r\nexport default ProfileReducer","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: boolean\r\n    spanClassName?: string\r\n    errorMes?: string\r\n    setError?:(value:boolean) => void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        errorMes,\r\n        onBlur,\r\n        setError,\r\n        value,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n    const [ErrorBlur, setErrorBlur] = useState<boolean>(false)\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.superInput} ${ErrorBlur && error ? s.errorInput : className ? s[className] : ''}`; // need to fix with (?:) and s.superInput\r\n\r\n    const onBlurHandler = (e:React.FocusEvent<HTMLInputElement>) => {\r\n        if (error) {\r\n            onBlur && onBlur(e)\r\n            setErrorBlur(true)\r\n        } else if (!value){\r\n            onBlur && onBlur(e)\r\n            setErrorBlur(true)\r\n            setError && setError(true)\r\n        } else {\r\n            setErrorBlur(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <input\r\n                type={type ? type : 'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                onBlur={ onBlurHandler}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {ErrorBlur && error ? <span className={finalSpanClassName}>{errorMes}</span> :\r\n                <span className={finalSpanClassName}> </span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange\n        && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    className?: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button_default} ${red ? s.button_red : \"\"} ${className ? s[className] : ''}`;\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import axios from \"axios\";\r\n\r\n\r\n//first deploy at 10.02.21\r\nconst configOMB = {\r\n    // localBack\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    // heroku\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n\r\n};\r\n\r\nconst axiosInstance = axios.create(configOMB);\r\nexport type ResponseTypeProfile = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    token: string\r\n}\r\n\r\nexport type ResponseTypeLogOut = {\r\n    info: string\r\n    error: string;\r\n}\r\n\r\nexport type ResponseTypeRegistration = {\r\n    email: string,\r\n    password: string,\r\n    error?: string | undefined\r\n}\r\n\r\n\r\nexport interface ResponseTypeCardsPacksData {\r\n    _id: string,\r\n    userId: string,\r\n    name: string,\r\n    path: '/def',\r\n    cardsCount: number,\r\n    grade: number,\r\n    shots: number,\r\n    rating: number,\r\n    type: 'pack' | 'folder',\r\n    created: Date;\r\n    updated: Date;\r\n\r\n}\r\n\r\nexport interface ResponseTypeCardsPacks {\r\n    cardPacks: Array<ResponseTypeCardsPacksData>,\r\n    page: number\r\n    pageCount: number\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nexport const ApiAuth = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return axiosInstance.post<ResponseTypeProfile>('/auth/login', {email, password, rememberMe})\r\n    },\r\n    logOut() {\r\n        return axiosInstance.delete<ResponseTypeLogOut>('/auth/me')\r\n    },\r\n    recovery(email: string) {\r\n        return axiosInstance.post('/auth/forgot', {\r\n            email, message: `<div style=\"background-color: lime; padding: 15px\">\t\r\n\tpassword recovery link: \r\n\t<a href='https://dimazharikov.github.io/Part16_dev/#/set-new-password/$token$'>\r\n\tlink</a></div>`\r\n        })\r\n    },\r\n    authMe() {\r\n        return axiosInstance.post<ResponseTypeProfile>('/auth/me')\r\n    },\r\n    changeName(name: string) {\r\n        return axiosInstance.put<{ updatedUser: ResponseTypeProfile }>('/auth/me', {name: name})\r\n    },\r\n    changePas(password: string, token: string) {\r\n        return axiosInstance.post('/auth/set-new-password', {\r\n            password: password,\r\n            resetPasswordToken: token\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const ApiRegistration = {\r\n    register(email: string, password: string) {\r\n        return axiosInstance.post <ResponseTypeRegistration>('auth/register', {email, password})\r\n    }\r\n}\r\n\r\n\r\nexport const ApiPack = {\r\n    getCardPacks(pageCount: number, page: number, user_id?: string) {\r\n        return axiosInstance.get<ResponseTypeCardsPacks>(`cards/pack`, {params: {page, pageCount, user_id}})\r\n    },\r\n    addCardPacks(body: { name: string }) {\r\n        return axiosInstance.post<ResponseTypeCardsPacksData>(`cards/pack`, {cardsPack: body})\r\n    },\r\n    deleteCardPack(id: string) {\r\n        return axiosInstance.delete<ResponseTypeCardsPacksData>(`cards/pack`, {params: {id}})\r\n    },\r\n    putCardPack(body: { _id: string, name: string }) {\r\n        return axiosInstance.put<ResponseTypeCardsPacksData>(`cards/pack`, {cardsPack: body})\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface ResponseTypeCardsData {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: number\r\n    created: string\r\n    updated: Date\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\n\r\nexport interface ResponseTypeCardsType {\r\n    cards: Array<ResponseTypeCardsData> | null\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n\r\nexport const ApiCards = {\r\n    getCards(cardsPack_id: string) {\r\n        return axiosInstance.get<ResponseTypeCardsType>(\"cards/card\", {params: {cardsPack_id}})\r\n    },\r\n    addCards(cardsPack_id: string, question: string) {\r\n        return axiosInstance.post<ResponseTypeCardsData>(\"cards/card\", {card: {cardsPack_id, question}})\r\n    },\r\n    deleteCards(id: string) {\r\n        return axiosInstance.delete<ResponseTypeCardsData>(\"cards/card\", {params: {id}})\r\n    },\r\n    putCards(_id: string, question: string){\r\n        return axiosInstance.put<ResponseTypeCardsData>(\"cards/card\", {card: {_id, question}})\r\n    }\r\n\r\n}","export interface stateProps {\r\n    isInitial: boolean\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isInitial: false,\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_INITIAL_APP = 'APP/INITIAL_APP',\r\n\r\n}\r\n\r\n//actions\r\nexport type AppType = ReturnType<typeof setInitialApp>\r\n\r\n\r\nexport const AppReducer = (state: stateProps = initialState, action: AppType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_INITIAL_APP:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialApp = (isInitial:boolean) => ({type:ActionType.SET_INITIAL_APP, payload:{isInitial}})\r\n\r\n\r\n\r\n","import {ApiAuth} from \"../../API/Api\";\r\nimport {setProfileAc} from \"../ProfileReducer/ProfileReducer\";\r\nimport {AppThunk} from \"../Store\";\r\nimport {setInitialApp} from \"../AppReducer/AppReducer\";\r\n\r\nexport type RequestStatusType = 'loading' | 'succeeded' | 'failed'\r\n\r\nexport interface stateProps {\r\n    isLogin: boolean\r\n    status: RequestStatusType\r\n    errorMes: string | undefined\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isLogin: false,\r\n    status: \"succeeded\",\r\n    errorMes: undefined\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_LOGIN = 'AUTH/SET_LOGIN',\r\n    SET_STATUS = 'AUTH/SET_STATUS',\r\n    SET_ERROR_MES = 'AUTH/SET_ERROR_MES'\r\n}\r\n\r\n//actions\r\n\r\n// interface Action<T> {\r\n//     type: ActionType,\r\n//     payload: T\r\n// }\r\n\r\n\r\nconst AuthReducer = (state: stateProps = initialState, action: AuthType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_LOGIN:\r\n            return {...state, ...action.payload}\r\n        case ActionType.SET_STATUS: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ActionType.SET_ERROR_MES:\r\n            return {...state, ...action.payload}\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setLoginAC = (isLogin: boolean) => ({type: ActionType.SET_LOGIN, payload: {isLogin}})\r\nexport const setStatusAC = (status: RequestStatusType) => ({type: ActionType.SET_LOGIN, payload: {status}})\r\n\r\nexport const setErrorMes = (errorMes: string) => ({type: ActionType.SET_ERROR_MES, payload: {errorMes}})\r\nexport const setLoginT = (email: string, password: string, rememberMe: boolean): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch(setProfileAc(res.data))\r\n            dispatch(setLoginAC(true))\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setErrorMes(error))\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\nexport const setLogOut = (): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.logOut()\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setLoginAC(false))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setErrorMes(error))\r\n            console.log('Error:', {...e})\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\nexport const setAuthMe = (): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.authMe()\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setProfileAc(res.data))\r\n            dispatch(setLoginAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setLoginAC(false))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setInitialApp(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const setChangeName = (name: string): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.changeName(name)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setProfileAc(res.data.updatedUser))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setErrorMes(error))\r\n            console.log('Error:', {...e})\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\n\r\nexport type AuthType = ReturnType<typeof setLoginAC> | ReturnType<typeof setStatusAC> | ReturnType<typeof setErrorMes>\r\n\r\nexport default AuthReducer","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {AppRootStateType} from \"../Store\";\r\nimport {ApiRegistration} from \"../../API/Api\";\r\n\r\n\r\nexport interface dataProps {\r\n    email: string,\r\n    error: string | undefined\r\n}\r\n\r\n\r\nexport interface stateProps {\r\n    isRegistration: boolean,\r\n    status: RequestStatusType;\r\n    data: dataProps\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isRegistration: false,\r\n    status: \"succeeded\",\r\n    data : {\r\n        email: '',\r\n        error: undefined\r\n    }\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_IS_REGISTRATION = \"REGISTRATION_CONTAINER/SET_IS_REGISTRATION\",\r\n    SET_STATUS = \"REGISTRATION_CONTAINER/SET_STATUS\",\r\n    SET_DATA = \"REGISTRATION_CONTAINER/SET_DATA\",\r\n    SET_ERROR  = \"REGISTRATION_CONTAINER/SET_ERROR\"\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n\r\n// ActionCreate\r\nexport const setRegistration = (isRegistration: boolean): Action<boolean> => ({\r\n    type: ActionType.SET_IS_REGISTRATION,\r\n    payload: isRegistration\r\n});\r\n\r\n\r\nexport const setStatus = (status : RequestStatusType): Action<RequestStatusType> => ({\r\n    type: ActionType.SET_STATUS,\r\n    payload: status\r\n});\r\n\r\nexport const setData = (data: {\r\n    email: string,  error?: string | undefined\r\n}): Action<{ email: string, error?: string | undefined }> => ({\r\n    type: ActionType.SET_DATA,\r\n    payload: data\r\n})\r\nexport const setError = (error: string | undefined): Action< string | undefined > => ({\r\n    type: ActionType.SET_ERROR,\r\n    payload: error\r\n})\r\n\r\n\r\n\r\n//Thunk\r\nexport const putData = (email: string, password: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>) => {\r\n        dispatch(setStatus('loading'))\r\n        ApiRegistration.register(email, password)\r\n            .then (res => {\r\n                dispatch(setStatus(\"succeeded\"))\r\n                dispatch(setRegistration(true))\r\n            })\r\n            .catch(e => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.response.data.error + 'check console')\r\n                console.log(error)\r\n                console.log('errors:', {...e})\r\n                dispatch(setError(error))\r\n                dispatch(setStatus(\"failed\"))\r\n            })\r\n            .finally(()=> dispatch(setRegistration(false)))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst RegistrationReducer = (state: stateProps = initialState, action: Action<boolean & RequestStatusType>): stateProps => {\r\n    switch (action.type) {\r\n        //initial Data\r\n        case ActionType.SET_DATA:\r\n            return {...state, data: action.payload}\r\n        //values from UI for push Email and password if VALID\r\n        case ActionType.SET_ERROR: {\r\n            return {...state, data: {...state.data, error: action.payload}}\r\n        }\r\n        case ActionType.SET_IS_REGISTRATION:\r\n            return {\r\n                ...state, isRegistration: action.payload\r\n            };\r\n        //values from UI for push Password\r\n        case ActionType.SET_STATUS:\r\n            return {\r\n                ...state, status: action.payload\r\n            };\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n//types\r\ntype TypeActions = ReturnType<typeof setData> |\r\n    ReturnType<typeof setRegistration> |\r\n    ReturnType<typeof setStatus> | ReturnType<typeof setError>\r\n\r\nexport default RegistrationReducer","import React, { Fragment } from \"react\";\r\nimport s from './Spinner.module.scss';\r\n\r\nconst Spinner = () => {\r\n\r\n    let arrStyle = [];\r\n    for (let i = 1; i < 21; i++) {\r\n        arrStyle.push({\"--i\": i} as React.CSSProperties)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <section>\r\n                <div className={s.loader}>\r\n                    {\r\n                        arrStyle.map((item, inx) => {\r\n                            return <span style={item} key={inx}/>\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export const validateInputNewPas = (setPassword:Function, value:string, setErrorMesPas:Function, setErrorPas:Function) => {\r\n    const rePassword = /(?=.*\\d)(?=.*[a-zA-Z]).{6,}/;\r\n    setPassword(value)\r\n    if (value.trim() === '') {\r\n        setErrorMesPas('Password Required')\r\n        setErrorPas(true)\r\n    } else if (!rePassword.test(value)) {\r\n        console.log(rePassword.test(value))\r\n        setErrorPas(true)\r\n        setErrorMesPas('the password must contain one digit, and length must be 6 and more')\r\n\r\n    } else {\r\n        setErrorMesPas('')\r\n        setErrorPas(false)\r\n    }\r\n\r\n}","import {FC, useState} from \"react\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperCheckbox from \"../../../Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport style from './AuthContainer.module.css'\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport {setErrorMes, setLoginT} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport {validateInputNewPas} from \"../../../Utils/Validation/ValidationPassword\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AuthContainer: FC<Props> = () => {\r\n    const reEmail = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n\r\n    const [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    const [errorLog, setErrorLog] = useState<boolean>(false)\r\n    const [password, setPassword] = useState<string>('1qazxcvBG')\r\n    const [errorMesLog, setErrorMesLog] = useState<string>('Login Required')\r\n    const [errorMesPas, setErrorMesPas] = useState<string>('Password Required')\r\n    const [errorPas, setErrorPas] = useState<boolean>(false)\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const status = useSelector((state: AppRootStateType) => state.auth.status)\r\n    const errordata = useSelector((state: AppRootStateType) => state.auth.errorMes)\r\n    console.log(errordata)\r\n    const dispatch = useDispatch()\r\n    const validateInputLog = (value: string) => {\r\n        setEmail(value)\r\n        if (value.trim() === '') {\r\n            setErrorMesLog('Email Required')\r\n            setErrorLog(true)\r\n\r\n        } else if (!reEmail.test(value)) {\r\n            setErrorLog(true)\r\n            setErrorMesLog('Email invalid')\r\n        } else {\r\n            setErrorMesLog('')\r\n            setErrorLog(false)\r\n        }\r\n    }\r\n    const changeInputValuePassword = (value: string) => {\r\n        validateInputNewPas(setPassword, value, setErrorMesPas, setErrorPas)\r\n    }\r\n    const logHandler = () => {\r\n\r\n        if (email && password) {\r\n            dispatch(setLoginT(email, password, check))\r\n        } else {\r\n            dispatch(setErrorMes('Password and Email Required'))\r\n        }\r\n\r\n    }\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.auth_main}>\r\n                <h3>Login</h3>\r\n                <div className={style.auth_wrapper}>\r\n                    <div className={style.input_block}>\r\n                        <SuperInputText\r\n                            value={email}\r\n                            onChangeText={validateInputLog}\r\n                            error={errorLog}\r\n                            placeholder={'E-mail'}\r\n                            errorMes={errorMesLog}\r\n                            setError={setErrorLog}\r\n                            className={'otherInput'}\r\n\r\n                        />\r\n                        <SuperInputText\r\n                            value={password}\r\n                            onChangeText={changeInputValuePassword}\r\n                            error={errorPas}\r\n                            placeholder={'Password'}\r\n                            errorMes={errorMesPas}\r\n                            setError={setErrorPas}\r\n                            type={'password'}\r\n                            className={'otherInput'}\r\n                        />\r\n                        <div className={style.auth_link}>\r\n                            <span><NavLink to={RoutingType.registration}>Registration</NavLink></span>\r\n                            <span><NavLink to={RoutingType.resPass}>Forgot Pas?</NavLink></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.btn_check}>\r\n                        <SuperCheckbox\r\n                            onChangeChecked={setCheck}\r\n                        > Remember </SuperCheckbox>\r\n                        <SuperButton\r\n                            onClick={logHandler}\r\n                            disabled={status === 'loading'}\r\n                        >\r\n                            Login\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    status === 'loading'\r\n                        ? <Spinner/>\r\n                        : status === 'failed'\r\n                        ? <div>\r\n                            <h5 className={style.errorMesOp}> {errordata}</h5></div>\r\n                        : ''\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AuthContainer","import {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {AppThunk} from \"../Store\";\r\nimport {ApiAuth} from \"../../API/Api\";\r\n\r\nexport interface stateProps {\r\n    checkWith: boolean\r\n    status: RequestStatusType\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    checkWith: false,\r\n    status: \"succeeded\"\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_CHECK_WITH = 'RES-PASS/SET-CHECK-WITH',\r\n    SET_STATUS = 'RES-PASS/SET_STATUS'\r\n}\r\n\r\n\r\n//actions\r\n\r\nexport const setStatus = (status: RequestStatusType) => ({type: ActionType.SET_STATUS, payload: {status}})\r\nexport const setChekWith = (checkWith: boolean) => ({type: ActionType.SET_CHECK_WITH, payload: {checkWith}})\r\n\r\n\r\nconst ResPasswordReducer = (state: stateProps = initialState, action: ResPasswordType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_STATUS: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ActionType.SET_CHECK_WITH: {\r\n            return {...state, ...action.payload}\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setChekWithThunk = (email: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatus('loading'))\r\n    try {\r\n        await ApiAuth.recovery(email)\r\n        dispatch(setChekWith(true))\r\n        dispatch(setStatus('succeeded'))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(setStatus('failed'))\r\n    }\r\n\r\n}\r\n\r\nexport type ResPasswordType = ReturnType<typeof setStatus> | ReturnType<typeof setChekWith>\r\n\r\nexport default ResPasswordReducer","import {FC, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {RequestStatusType} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport {dataProps, putData} from \"../../../Redux/RegistrationReducer/RegistartionReducer\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport style from './Registration.module.scss'\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst RegistrationContainer: FC<Props> = ({\r\n                                              ...props\r\n                                          }) => {\r\n    //reducer variable\r\n    const isRegistration = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistration);\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.registration.status);\r\n    const data = useSelector<AppRootStateType, dataProps>( state => state.registration.data)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    //validate Email with Password\r\n    const reEmail = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    const rePassword = /(?=.*\\d)(?=.*[a-zA-Z]).{6,}/;\r\n\r\n\r\n    //values of Email, Password, Confirm Password\r\n    const [email, setEmail] = useState<string>(data.email)\r\n    const [password, setPassword] = useState<string>()\r\n    const [confirmPassword, setConfirmPassword] = useState<string>()\r\n\r\n\r\n    //isValid of Email, Password, Confirm Password\r\n    const [isValidEmail, setIsValidEmail] = useState<boolean>(false)\r\n    const [isValidPassword, setIsValidPassword] = useState<boolean>(false)\r\n    const [isValidConfirmPassword, setIsValidConfirmPassword] = useState<boolean>(false)\r\n\r\n\r\n    //Error\r\n    const [errorEmail, setErrorEmail] = useState<string>('Login Required')\r\n    const [errorPassword, setErrorPassword] = useState<string>('Password must be with number and A-Z, a-z letters, length must be 6 and more')\r\n    const [errorConfirmPassword, setErrorConfirmPassword] = useState<string>('passwords must match')\r\n\r\n\r\n\r\n\r\n    //validate for Email\r\n    const isValidateEmailReg = (value: string) => {\r\n        setEmail(value)\r\n        if (value.trim() === '') {\r\n            setErrorEmail('Email is Required')\r\n            setIsValidEmail(true)\r\n\r\n        } else\r\n            // if value inValid of reEmail\r\n        if (!reEmail.test(value)) {\r\n            setErrorEmail('Invalid Email')\r\n            setIsValidEmail(true)\r\n\r\n        } else {\r\n            // else value email valid of reEmail\r\n            setErrorEmail('')\r\n            setIsValidEmail(false)\r\n\r\n        }\r\n    }\r\n    //validate for Password\r\n    const validatePassword = (value: string) => {\r\n        setPassword(value)\r\n        if (value.trim() === '' && value.length > 8) {\r\n\r\n            setIsValidPassword(true)\r\n            setErrorPassword('Password area is Required')\r\n\r\n        } else if (!rePassword.test(value)) {\r\n            setIsValidPassword(true)\r\n            setErrorPassword('the password must contain one digit, and length must be 8 and more')\r\n        } else {\r\n            setIsValidPassword(false)\r\n            setErrorPassword('')\r\n        }\r\n    }\r\n    //validate for ConfirmPassword\r\n    // confirmValue === passwordValue => true , else error\r\n    const validateConfirmPassword = (value: string) => {\r\n        setConfirmPassword(value)\r\n\r\n        if (value !== password) {\r\n            setIsValidConfirmPassword(true)\r\n            setErrorConfirmPassword('Passwords must be the sames!')\r\n\r\n        } else {\r\n            setIsValidConfirmPassword(false)\r\n            setErrorConfirmPassword('')\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //if validate false and email area is valid => registration , btnDisabled - false\r\n    const onRegistrationHandler = () => {\r\n        if (email && password && confirmPassword) {\r\n            dispatch(putData(email, password))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // reducer registration changed on True if all input valid\r\n    if (isRegistration) {\r\n        return <Redirect to={RoutingType.auth}/>\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<div className={style.container}>\r\n        <h1>Registration</h1>\r\n        <Paper className={style.reg_wrapper}>\r\n            {/*Email*/}\r\n            <h2>E-mail:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    value={email}\r\n                    onChangeText={isValidateEmailReg}\r\n                    error={isValidEmail}\r\n                    placeholder={'E-mail'}\r\n                    errorMes={errorEmail}\r\n                    setError={setIsValidEmail}\r\n                    className={'otherInput'}\r\n\r\n                />\r\n            </Paper>\r\n\r\n\r\n            {/*password*/}\r\n\r\n                <h2>Password:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    value={password}\r\n                    onChangeText={validatePassword}\r\n                    error={isValidPassword}\r\n                    placeholder={'Password'}\r\n                    errorMes={errorPassword}\r\n                    setError={setIsValidPassword}\r\n                    className={'otherInput'}\r\n                    type={'password'}\r\n                />\r\n            </Paper>\r\n\r\n\r\n\r\n\r\n\r\n            {/*confirm password*/}\r\n            <h2>Confirm Password:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    value={confirmPassword}\r\n                    onChangeText={validateConfirmPassword}\r\n                    error={isValidConfirmPassword}\r\n                    placeholder={'Confirm Password'}\r\n                    errorMes={errorConfirmPassword}\r\n                    setError={setIsValidPassword}\r\n                    className={'otherInput'}\r\n                    type={'password'}\r\n                />\r\n            </Paper>\r\n\r\n        </Paper>\r\n        <div>\r\n            <SuperButton\r\n                onClick={onRegistrationHandler}\r\n                disabled={status === 'loading'}\r\n                className={style.btn}\r\n            >\r\n                Registration\r\n            </SuperButton>\r\n        </div>\r\n\r\n    <div>\r\n        {\r\n            status === 'loading'\r\n                ? <Spinner/>\r\n                : status === 'failed'\r\n                ? <div>\r\n                    <h1>{data.error}</h1></div>\r\n                : ''\r\n        }\r\n    </div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default RegistrationContainer\r\n","import React, {FC} from 'react';\r\nimport style from './Modal.module.scss'\r\n\r\n\r\ninterface ModalType {\r\n    modal: boolean\r\n    setModal: (value: boolean) => void\r\n}\r\n\r\n\r\nconst Modal: FC<ModalType> = ({modal, setModal, children}) => {\r\n    const finalModalClassName = `${style.modal} ${modal ? style.active : \"\"}`;\r\n    const finalModalContentClassName = `${style.modal_content} ${modal ? style.active : \"\"}`;\r\n    return (\r\n        <div className={finalModalClassName} onClick={ () => setModal(false)}>\r\n            <div className={finalModalContentClassName} onClick={e =>  e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {FC, useState} from 'react';\r\nimport SuperInputText from \"../../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../../Components/c2-SuperButton/SuperButton\";\r\nimport Modal from \"../../../../Components/Modal/Modal\";\r\nimport {setChangeName} from \"../../../../Redux/AuthReducer/AuthReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from \"../ProfileContainer.module.scss\";\r\n\r\ninterface Props {\r\n    errorMes?: string\r\n}\r\nconst ProfileChangeName:FC<Props> = ({errorMes}) => {\r\n\r\n    const [name, setName] = useState<string>()\r\n    const [modal, setModal] = useState<boolean>(false)\r\n    const dispatch = useDispatch();\r\n    const changeNameHandler = () => {\r\n        if (name) {\r\n            dispatch(setChangeName(name))\r\n            setModal(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <span className={style.change_name} onClick={() => setModal(true)}>Change name</span>\r\n            <Modal\r\n                modal={modal}\r\n                setModal={setModal}\r\n            >\r\n                <SuperInputText\r\n                    value={name}\r\n                    onChangeText={setName}\r\n                    placeholder={'New-Name'}\r\n\r\n                />\r\n                <SuperButton onClick={changeNameHandler}>Change Name</SuperButton>\r\n                {!!errorMes? <span>errorMes</span> : null}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileChangeName;","import React, {FC} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport {setLogOut} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport style from './ProfileContainer.module.scss'\r\nimport ProfileChangeName from \"./ProfileChangeName/ProfileChangeName\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ProfileContainer: FC<Props> = () => {\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const profile = useSelector((state: AppRootStateType) => state.profile.profile)\r\n    const status = useSelector((state: AppRootStateType) => state.auth.status)\r\n    const errorMes = useSelector((state: AppRootStateType) => state.auth.errorMes)\r\n    const dispatch = useDispatch();\r\n    console.log(document.cookie)\r\n\r\n\r\n    if (!isLogin || !profile) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    const logOutHandler = () => {\r\n        dispatch(setLogOut())\r\n    }\r\n    if (status === \"loading\") {\r\n        return <Spinner/>\r\n    } else if (status === \"failed\") {\r\n        return (\r\n            <div>\r\n                <h1>something wrong</h1>\r\n            </div>\r\n        )\r\n    }\r\n    if (profile) {\r\n        return (\r\n            <div className={style.profile_main_wrapper}>\r\n                <div>\r\n                    <h1>Profile</h1>\r\n                </div>\r\n                <div className={style.profile_item_wrapper}>\r\n                    <div className={style.profile_item}><span className={style.item_title}>E-mail:</span> <span>{profile.email}</span></div>\r\n                    <div className={style.profile_item}><span className={style.item_title}>name:</span> <span>{profile.name}</span>\r\n                        <ProfileChangeName errorMes={errorMes}/>\r\n                    </div>\r\n                    <div className={style.profile_item}><span className={style.item_title}>id:</span><span>{profile._id}</span></div>\r\n                </div>\r\n                <Link to={RoutingType.auth} onClick={logOutHandler}>\r\n                    <span>Log Out</span>\r\n                </Link>\r\n\r\n            </div>)\r\n    } else {\r\n        return <div/>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ProfileContainer","import {FC} from \"react\";\r\n\r\ninterface Props {\r\n    title: string\r\n}\r\n\r\n\r\nconst ResPassword: FC<Props> = ({\r\n                                   title, ...props\r\n                                }) => {\r\n    return (<div>\r\n        <h3>{title}</h3>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ResPassword","import {AppThunk} from \"../Store\";\r\nimport {ApiAuth} from \"../../API/Api\";\r\n\r\n\r\nexport interface stateProps {\r\n    changeMes: boolean\r\n    errorMes?: string\r\n    loading: boolean\r\n\r\n\r\n}\r\n//Type\r\nexport enum ActionType {\r\n    NEW_CHANGE_MES = 'NEW_PAS/NEW_CHANGE_MES',\r\n    ERROR_MES = 'NEW_PAS/ERROR_MES',\r\n    LOADING = 'NEW_PAS/LOADING'\r\n}\r\n\r\nconst initialState: stateProps = {\r\n    changeMes: false,\r\n    errorMes: undefined,\r\n    loading:false\r\n}\r\n//actions\r\nexport const setNewMes = (changeMes:boolean) => ({type:ActionType.NEW_CHANGE_MES, payload:{changeMes}})\r\nexport const setErrorMes = (errorMes:string) => ({type:ActionType.ERROR_MES, payload: {errorMes}})\r\nconst loadingNewPas = (loading:boolean) => ({type:ActionType.LOADING, payload:{loading}})\r\n\r\nexport type NewMesActionType = ReturnType<typeof setNewMes> | ReturnType<typeof setErrorMes>| ReturnType<typeof loadingNewPas>\r\n\r\n\r\n\r\n\r\nconst NewPasswordReducer = (state: stateProps = initialState, action: NewMesActionType): stateProps => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.NEW_CHANGE_MES:\r\n            return {...state, ...action.payload}\r\n        case ActionType.ERROR_MES:\r\n            return {...state, ...action.payload}\r\n        case ActionType.LOADING:\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const ChangePassword = (password: string, token:string):AppThunk => (dispatch) => {\r\n    dispatch(loadingNewPas(true))\r\n    ApiAuth.changePas(password, token)\r\n        .then(res => {\r\n            dispatch(setNewMes(true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setErrorMes(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingNewPas(false))\r\n            dispatch(setNewMes(false))\r\n        })\r\n}\r\n\r\nexport default NewPasswordReducer","import {FC} from \"react\";\r\nimport ResPasswordComponent from \"./ResPasswordComponent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from 'formik';\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport style from './ResPassword.module.css'\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport {setChekWithThunk} from \"../../../Redux/ResPassReducer/ResPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ntype ErrorType = {\r\n    email?: string\r\n}\r\n\r\n\r\nconst ResPasswordContainer : FC <Props> = ({\r\n     ...props\r\n}) => {\r\n\r\n    const checkWith  = useSelector((state: AppRootStateType) => state.resPas.checkWith)\r\n    const status  = useSelector((state: AppRootStateType) => state.resPas.status)\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        onSubmit: (values) => {\r\n           dispatch( setChekWithThunk(values.email) )\r\n            formik.resetForm();\r\n        },\r\n        validate: (values) => {\r\n            const errors: ErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            return errors;\r\n        }\r\n    });\r\n\r\n\r\n    if(status === \"loading\") {\r\n        return <Spinner/>\r\n    } else if (status === \"failed\") {\r\n        return (\r\n            <div>\r\n                <h1>something wrong</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (checkWith) {\r\n        return  <Redirect to={RoutingType.auth}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.res_Password_wrapper}>\r\n\r\n        <ResPasswordComponent title = {'Reset Password Page'}/>\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n            <div className={style.input_style}>\r\n                <SuperInputText\r\n                    type={'email'}\r\n                    placeholder={'E-mail'}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n            </div>\r\n            {\r\n                formik.touched.email && formik.errors.email\r\n                    ? <div className={style.error}>{formik.errors.email}</div> : null\r\n            }\r\n\r\n            <SuperButton type={'submit'} >\r\n                Send email\r\n            </SuperButton>\r\n        </form>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default ResPasswordContainer","import {ApiPack, ResponseTypeCardsPacksData} from \"../../API/Api\";\r\nimport {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../Store\";\r\nimport UseErrorCatch from \"../../Utils/Hooks/useErrorCatch\";\r\n\r\n\r\nexport interface stateProps {\r\n    cardPacks: ResponseTypeCardsPacksData[] | null    \r\n    error: string | undefined\r\n    status: RequestStatusType,\r\n    isDisabled: boolean,\r\n    pageSize: number\r\n    currentPage: number\r\n    isPrivat: boolean\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    cardPacks: null,\r\n    status: \"succeeded\",\r\n    error: undefined,\r\n    isDisabled: false,\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    isPrivat: false\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    GET_PACKS = \"/PACKS/GET_PACKS\",\r\n    SET_STATUS = \"/PACKS/SET_STATUS\",\r\n    SET_ERROR = 'PACKS/SET_ERROR',\r\n    IS_DISABLED = \"PACKS/ADD_BTN/IS_DISABLED\",\r\n    IS_PRIVAT = \"PACKS/CHECK/IS_PRIVAT\",\r\n    SET_PAGE_SIZE = \"PACKS/SET_PAGE_SIZE\",\r\n    SET_CURRENT_PAGE = \"PACKS/SET_CURRENT_PAGE\",\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\nexport const getPacks = (data: ResponseTypeCardsPacksData[]): Action<ResponseTypeCardsPacksData[]> => ({\r\n    type: ActionType.GET_PACKS,\r\n    payload: data\r\n});\r\n\r\n\r\nexport const setStatus = (status: RequestStatusType): Action<RequestStatusType> => ({\r\n    type: ActionType.SET_STATUS,\r\n    payload: status\r\n})\r\n\r\nexport const setError = (error: string | undefined): Action<string | undefined> => ({\r\n    type: ActionType.SET_ERROR,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const isDisabled = (isDisabled: boolean): Action<boolean> => ({\r\n    type: ActionType.IS_DISABLED,\r\n    payload: isDisabled\r\n})\r\nexport const seTisPrivat = (isPrivat: boolean): Action<boolean> => ({\r\n    type: ActionType.IS_PRIVAT,\r\n    payload: isPrivat\r\n})\r\nexport const setPageSizeAC = (pageSize: number): Action<number> => ({\r\n    type: ActionType.SET_PAGE_SIZE,\r\n    payload: pageSize\r\n})\r\nexport const setCurrentPageAC = (currentPage: number): Action<number> => ({\r\n    type: ActionType.SET_CURRENT_PAGE,\r\n    payload: currentPage\r\n})\r\n\r\n\r\n//thunk\r\n\r\n\r\nexport const getPacksThunk = (pageSize:number,currentPage:number, user_id?: string) => (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>) => {\r\n    dispatch(setStatus('loading'))\r\n    ApiPack.getCardPacks(pageSize, currentPage, user_id)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            dispatch(isDisabled(false))\r\n            dispatch(getPacks(res.data.cardPacks))\r\n            dispatch(setStatus('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            UseErrorCatch(e, dispatch)\r\n\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatus('succeeded'))\r\n        })\r\n\r\n}\r\nexport const addPacksThunk = (name:string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>, getState: () => AppRootStateType) => {\r\n        dispatch(setStatus('loading'))\r\n        const pageSize = getState().packsPage.pageSize\r\n        const currentPage = getState().packsPage.currentPage\r\n        const isPrivat = getState().packsPage.isPrivat\r\n        const profile = getState().profile.profile\r\n        ApiPack.addCardPacks({name})\r\n            .then(() => {\r\n                dispatch(isDisabled(true))\r\n                if(isPrivat && profile) {\r\n                    dispatch(getPacksThunk(pageSize,currentPage, profile._id))\r\n                } else {\r\n                    dispatch(getPacksThunk(pageSize,currentPage))\r\n                }\r\n\r\n\r\n            })\r\n            .catch(e => {\r\n                UseErrorCatch(e, dispatch)\r\n            })\r\n\r\n\r\n    }\r\n\r\nexport const deletePackThunk = (_id: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>, getState: () => AppRootStateType) => {\r\n        const pageSize = getState().packsPage.pageSize\r\n        const currentPage = getState().packsPage.currentPage\r\n        const isPrivat = getState().packsPage.isPrivat\r\n        const profile = getState().profile.profile\r\n        dispatch(setStatus('loading'))\r\n        ApiPack.deleteCardPack(_id)\r\n            .then(() => {\r\n                dispatch(isDisabled(false))\r\n                if(isPrivat && profile) {\r\n                    dispatch(getPacksThunk(pageSize,currentPage, profile._id))\r\n                } else {\r\n                    dispatch(getPacksThunk(pageSize,currentPage))\r\n                }\r\n            })\r\n            .catch(e => {\r\n                UseErrorCatch(e, dispatch)\r\n            })\r\n    }\r\n\r\nexport const onChangeNamePackThunk = ( _id: string, name: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>, getState: () => AppRootStateType) => {\r\n        const pageSize = getState().packsPage.pageSize\r\n        const currentPage = getState().packsPage.currentPage\r\n        const isPrivat = getState().packsPage.isPrivat\r\n        const profile = getState().profile.profile\r\n        ApiPack.putCardPack({_id,name})\r\n            .then ((res)=> {\r\n                console.log(res)\r\n                if(isPrivat && profile) {\r\n                    dispatch(getPacksThunk(pageSize,currentPage, profile._id))\r\n                } else {\r\n                    dispatch(getPacksThunk(pageSize,currentPage))\r\n                }\r\n\r\n            })\r\n            .catch(e => {\r\n                UseErrorCatch(e, dispatch)\r\n        })\r\n    }\r\n\r\n\r\n\r\nconst PacksPageReducer = (state: stateProps = initialState, action: Action<ResponseTypeCardsPacksData[] &\r\n    RequestStatusType & ResponseTypeCardsPacksData & boolean & number>): stateProps => {\r\n    switch (action.type) {\r\n        //initial state from Back\r\n        case ActionType.GET_PACKS:\r\n            return {\r\n                ...state, cardPacks: action.payload\r\n            }\r\n\r\n        // loading | succeeded\r\n        case ActionType.SET_STATUS: {\r\n            return {\r\n                ...state, status: action.payload\r\n            }\r\n        }\r\n        // on BTN for addPacksThunk\r\n        case ActionType.IS_DISABLED:\r\n            return {\r\n                ...state, isDisabled: action.payload\r\n            }\r\n\r\n        // errors\r\n        case ActionType.SET_ERROR:\r\n            return {\r\n                ...state, error: action.payload\r\n            }\r\n        case ActionType.SET_PAGE_SIZE:\r\n            return {...state, pageSize: action.payload}\r\n        case ActionType.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.payload}\r\n        case ActionType.IS_PRIVAT:\r\n            return {...state, isPrivat: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\ntype TypeActions = ReturnType<typeof getPacks> | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setError> | ReturnType<typeof isDisabled>\r\n\r\nexport default PacksPageReducer","import React, {FC, useState} from \"react\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {validateInputNewPas} from \"../../../Utils/Validation/ValidationPassword\";\r\nimport {ChangePassword} from \"../../../Redux/NewPassReducer/NewPassReducer\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport style from './NewPasswordContainer.module.scss'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst NewPasswordContainer: FC<Props> = () => {\r\n    const [password, setPassword] = useState<string>()\r\n    const [confirmPassword, setConfirmPassword] = useState<string>()\r\n    const [errorMesPas, setErrorMesPas] = useState<string>('Password Required')\r\n    const [errorMesConfirmPas, setErrorMesConfirmPas] = useState<string>('Confirm password Required\\'')\r\n    const [isValidPassword, setIsValidPassword] = useState<boolean>(true)\r\n    const [isValidConfirmPassword, setIsValidConfirmPassword] = useState<boolean>(false)\r\n    const errorMes = useSelector((state: AppRootStateType) => state.newPas.errorMes)\r\n    const loading = useSelector((state: AppRootStateType) => state.newPas.loading)\r\n    const isChange = useSelector((state: AppRootStateType) => state.newPas.changeMes)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const history = useHistory()\r\n    const regUrl = /(\\/.+\\/)/gm\r\n\r\n    const token = history.location.pathname.replace(regUrl, \"\")\r\n\r\n    const validPasswordValue = (value: string) => {\r\n        validateInputNewPas(setPassword, value, setErrorMesPas, setIsValidPassword)\r\n    }\r\n    const validConfirmPasswordValue = (value: string) => {\r\n        validateInputNewPas(setConfirmPassword, value, setErrorMesConfirmPas, setIsValidConfirmPassword)\r\n        if (value !== password) {\r\n            setIsValidConfirmPassword(true)\r\n            setErrorMesConfirmPas('passwords must match')\r\n        } else {\r\n            setIsValidConfirmPassword(false)\r\n        }\r\n    }\r\n    const changePasswordHandler = () => {\r\n        if (password) {\r\n            dispatch(ChangePassword(password, token))\r\n        }\r\n        setPassword('')\r\n    }\r\n    if(isChange) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    return (\r\n        <div className={style.wrapper_main}>\r\n            <div className={style.wrapper_items}>\r\n                <SuperInputText\r\n                    value={password}\r\n                    onChangeText={validPasswordValue}\r\n                    placeholder={'New Password'}\r\n                    error={isValidPassword}\r\n                    errorMes={errorMesPas}\r\n                    setError={setIsValidPassword}\r\n                    type={'password'}\r\n                />\r\n                <SuperInputText\r\n                    value={confirmPassword}\r\n                    onChangeText={validConfirmPasswordValue}\r\n                    placeholder={'Confirm Password'}\r\n                    error={isValidConfirmPassword}\r\n                    errorMes={errorMesConfirmPas}\r\n                    setError={setIsValidConfirmPassword}\r\n                    type={'password'}\r\n                />\r\n                <div><SuperButton onClick={changePasswordHandler} disabled={loading || password !== confirmPassword}>Change\r\n                    password</SuperButton></div>\r\n                {loading ? <Spinner/> : null}\r\n                {!!errorMes ? <span>errorMes</span> : null}\r\n\r\n            </div>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default NewPasswordContainer","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Error404.module.css'\r\n\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div className={style.wrapped}>\r\n            <figure>\r\n                <div className={style.sadMac}/>\r\n                <NavLink to={'/'}>\r\n                    GO TO HOME\r\n                </NavLink>\r\n                <figcaption>\r\n                    <span className={style.srText}>Error 404: Not Found</span>\r\n                    <span className={style.e}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style._4}/>\r\n                    <span className={style._0}/>\r\n                    <span className={style._4}/>\r\n                    <span className={style.n}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.t}/>\r\n                    <span className={style.f}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.u}/>\r\n                    <span className={style.n}/>\r\n                    <span className={style.d}/>\r\n                </figcaption>\r\n\r\n            </figure>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404;","import {FC} from \"react\";\r\nimport Error404 from \"./Error404\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ErrorContainer: FC<Props> = () => {\r\n    return (<div>\r\n        <Error404/>\r\n    </div>)\r\n}\r\n\r\nexport default ErrorContainer\r\n\r\n","\r\nimport {setError, setStatus} from \"../../Redux/PacksPageReducer/PacksPageReducer\";\r\n\r\nimport {Dispatch} from \"react\";\r\n\r\nconst UseErrorCatch = (e:any, dispatch: Dispatch<any>) => {\r\n\r\n    const error = e.response.data.error\r\n        ? e.response.data.error\r\n        : 'checkError'\r\n    // console.log(error)\r\n    // console.log('errors:', {...e})\r\n    dispatch(setError(error))\r\n    dispatch(setStatus('failed'))\r\n\r\n\r\n};\r\n\r\nexport default UseErrorCatch;","import {ApiCards, ResponseTypeCardsData} from \"../../API/Api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../Store\";\r\nimport {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport UseErrorCatch from \"../../Utils/Hooks/useErrorCatch\";\r\n\r\n\r\nexport interface stateProps {\r\n    cards: Array<ResponseTypeCardsData> | null\r\n    status: RequestStatusType,\r\n    error: string | null,\r\n\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    cards: null,\r\n    status: \"succeeded\",\r\n    error: null,\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    GET_CARDS = \"CardsContainer/GET_CARDS\",\r\n    SET_STATUS = \"CardsContainer/SET_STATUS\",\r\n\r\n    SET_ERROR = \"CardsContainer/SET_ERROR\",\r\n\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\nexport const setCards = (cards: Array<ResponseTypeCardsData> | null): Action<Array<ResponseTypeCardsData> | null> => ({\r\n    type: ActionType.GET_CARDS,\r\n    payload: cards\r\n})\r\n\r\n\r\nexport const setStatus = (status: RequestStatusType): Action<RequestStatusType> => ({\r\n    type: ActionType.SET_STATUS,\r\n    payload: status\r\n})\r\n\r\n\r\nexport const getError = (error: string): Action<string> => ({\r\n    type: ActionType.SET_ERROR,\r\n    payload: error\r\n})\r\n\r\n//thunk\r\nexport const getCardsThunk = (cardsPack_id: string, question?: string, _id?: string) => (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>) => {\r\n    dispatch(setStatus('loading'))\r\n    ApiCards.getCards(cardsPack_id)\r\n        .then((res) => {\r\n            console.log('cards:', res.data.cards)\r\n            dispatch(setCards(res.data.cards))\r\n            dispatch(setStatus('succeeded'))\r\n        })\r\n        .catch((e) => {\r\n            UseErrorCatch(e, dispatch)\r\n        })\r\n        .finally(() => {\r\n        dispatch(setStatus('succeeded'))\r\n    })\r\n};\r\n\r\nexport const addCardsThunk = (cardsPack_id: string, question: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>) => {\r\n        dispatch(setStatus('loading'))\r\n        ApiCards.addCards(cardsPack_id, question)\r\n            .then(() => {\r\n                dispatch(getCardsThunk(cardsPack_id, question))\r\n                dispatch(setStatus('succeeded'))\r\n            })\r\n            .catch((e) => {\r\n                UseErrorCatch(e, dispatch)\r\n            })\r\n\r\n    }\r\n\r\n\r\nexport const deleteCardsThunk = (cardsPack_id: string,_id: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>) => {\r\n        dispatch(setStatus('loading'))\r\n        ApiCards.deleteCards(_id)\r\n            .then(() => {\r\n                dispatch(getCardsThunk(cardsPack_id,_id))\r\n                dispatch(setStatus('succeeded'))\r\n            })\r\n            .catch(e => {\r\n                UseErrorCatch(e, dispatch)\r\n            })\r\n    }\r\n\r\n\r\n    export const onChangedCardsThunk = (cardsPack_id: string,_id: string, question: string)=>\r\n        (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>) => {\r\n            dispatch(setStatus('loading'))\r\n            ApiCards.putCards(_id, question)\r\n                .then(()=> {\r\n                    dispatch(getCardsThunk(cardsPack_id,_id,question))\r\n                    dispatch(setStatus('succeeded'))\r\n\r\n                })\r\n                .catch(e => {\r\n                UseErrorCatch(e, dispatch)\r\n            })\r\n        }\r\n\r\n\r\nconst CardsReducer = (state: stateProps = initialState,\r\n                      action: Action<ResponseTypeCardsData[] & string\r\n                          & RequestStatusType>): stateProps => {\r\n    switch (action.type) {\r\n        //get cards from API\r\n        case ActionType.GET_CARDS:\r\n            return {\r\n                ...state, cards: action.payload\r\n            }\r\n\r\n        //status\r\n        case ActionType.SET_STATUS:\r\n            return {\r\n                ...state, status: action.payload\r\n            };\r\n        //error\r\n        case ActionType.SET_ERROR:\r\n            return {...state, error: action.payload}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\ntype  ActionsType = ReturnType<typeof setCards> | ReturnType<typeof setStatus> |\r\n    ReturnType<typeof getError>\r\n\r\n\r\nexport default CardsReducer","import React, {FC, useState} from 'react';\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport Modal from \"../../../Components/Modal/Modal\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\n\r\ninterface Props {\r\n    errorMes?: string,\r\n    namePack: string,\r\n    cardsPack_id: string,\r\n\r\n    onChangeName: (id: string, name:string) => void\r\n}\r\n\r\nconst ChangeName: FC<Props> = ({cardsPack_id, namePack, errorMes,onChangeName\r\n                                   }) => {\r\n\r\n    const [name, setName] = useState<string>(namePack)\r\n    const [modal, setModal] = useState<boolean>(false)\r\n\r\n    const changeNameHandler = () => {\r\n        if (name) {\r\n            onChangeName(cardsPack_id, name)\r\n            setModal(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <SuperButton onClick={() => setModal(true)} className='btn_table'>Change name</SuperButton>\r\n            <Modal\r\n                modal={modal}\r\n                setModal={setModal}\r\n            >\r\n                <SuperInputText\r\n                    value={name}\r\n                    onChangeText={setName}\r\n                    placeholder={'New-Name'}\r\n\r\n                />\r\n                <SuperButton onClick={changeNameHandler}>Change Name</SuperButton>\r\n                {!!errorMes ? <span>errorMes</span> : null}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChangeName;","import React, { FC } from 'react';\r\nimport style from './TableItem.module.scss'\r\n\r\ninterface Props {\r\n    name1: string\r\n    name2?: number\r\n    name3?: Date\r\n}\r\n\r\nconst TableItem:FC<Props> = (props) => {\r\n    return (\r\n        <div className={style.card_wrapped}>\r\n            <div className={style.card_item}>{props.name1}</div>\r\n            <div className={style.card_item}>{props.name2}</div>\r\n            <div className={style.card_item}>{props.name3}</div>\r\n            <div className={`${style.card_item } ${style.card_item_btn}`}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TableItem;","import {FC} from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport AuthContainer from \"../PagesApp/WrappedPages/AuthPage/AuthContainer\";\r\nimport RegistrationContainer from \"../PagesApp/WrappedPages/RegistartionPage/RegistrationContainer\";\r\nimport ProfileContainer from \"../PagesApp/WrappedPages/ProfilePage/ProfileContainer\";\r\nimport ResPasswordContainer from \"../PagesApp/WrappedPages/ResPasswordPage/ResPasswordContainer\";\r\nimport NewPasswordContainer from \"../PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer\";\r\nimport ErrorContainer from \"../PagesApp/WrappedPages/ErrorPage/ErrorContainer\";\r\nimport PacksContainer from \"../PagesApp/WrappedPages/PacksPage/PacksContainer\";\r\nimport CardsPageContainer from \"../PagesApp/WrappedPages/CardsPage/CardsPageConteiner\"\r\n\r\n\r\n\r\nexport enum RoutingType {\r\n    auth=\"/auth\",\r\n    registration = \"/registration\",\r\n    profile = \"/profile\",\r\n    error=\"/404\",\r\n    resPass = \"/resPassword\",\r\n    newPass =\"/set-new-password\",\r\n    packs = \"/packs\",\r\n    cards = \"/cards\"\r\n}\r\n\r\n\r\n\r\n\r\nconst Routes : FC = () => {\r\n    return (<>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={RoutingType.profile}/>}/>\r\n                <Route exact path={RoutingType.auth} render={()=> <AuthContainer/>}/>\r\n                <Route exact path = {RoutingType.registration} render ={()=> <RegistrationContainer/>}/>\r\n                <Route exact path = {RoutingType.profile} render = {()=><ProfileContainer/>}/>\r\n                <Route exact path = {RoutingType.resPass} render = {()=> <ResPasswordContainer/>}/>\r\n                <Route path = {RoutingType.newPass} render = {()=> <NewPasswordContainer/>}/>\r\n                <Route  exact path = {RoutingType.packs} render = {()=> <PacksContainer/>}/>\r\n                <Route path = {`${RoutingType.cards}/:cardId`} render = {()=> <CardsPageContainer/>}/>\r\n                <Route path={RoutingType.error} render={()=> <ErrorContainer/>}/>\r\n                <Redirect from={'*'} to={RoutingType.error}/>\r\n            </Switch>\r\n    </>)\r\n}\r\n\r\n\r\nexport default Routes;","import React, {FC} from \"react\";\r\nimport {ResponseTypeCardsPacksData} from \"../../../API/Api\";\r\nimport style from './Packs.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport ChangeName from \"./ChengeNameInput\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport TableItem from \"../../../Components/TableWrapper/TableIttem/TableItem\";\r\nimport {getCardsThunk} from \"../../../Redux/CardsReducer/CardsReducer\";\r\nimport {onChangeNamePackThunk} from \"../../../Redux/PacksPageReducer/PacksPageReducer\";\r\n\r\n\r\ninterface Props{\r\n    cardPacks: ResponseTypeCardsPacksData\r\n    onDeletePack: (id: string) => void\r\n}\r\n\r\nconst PacksComponent: FC <Props> = ({\r\n                                        onDeletePack, cardPacks\r\n}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const onSwitchedToCards = () => {\r\n        dispatch(getCardsThunk(cardPacks._id))\r\n    }\r\n    const onChangeNamePack = (id: string, name: string) => {\r\n        dispatch(onChangeNamePackThunk(id, name))\r\n    }\r\n\r\n\r\n    return (\r\n        < >\r\n            <TableItem name1={cardPacks.name} name2={cardPacks.cardsCount} name3={cardPacks.updated}>\r\n                <SuperButton onClick={() => onDeletePack(cardPacks._id)} className='btn_table'>del</SuperButton>\r\n                <ChangeName namePack={cardPacks.name} cardsPack_id={cardPacks._id}\r\n                            onChangeName = {onChangeNamePack}/>\r\n                <NavLink to={`/cards/${cardPacks._id}`}\r\n                    onClick = {onSwitchedToCards}\r\n                > Cards </NavLink>\r\n            </TableItem>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default PacksComponent","import React, {FC, useState} from 'react';\r\nimport Modal from \"../../../../Components/Modal/Modal\";\r\nimport SuperInputText from \"../../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../../Components/c2-SuperButton/SuperButton\";\r\n\r\n\r\ninterface Props{\r\n    addNewName: (name:string) => void\r\n}\r\n\r\nconst AddNewPack:FC<Props> = (props) => {\r\n    const [names, setNames] = useState<string>()\r\n    const [modal, setModal] = useState<boolean>(false)\r\n    const changeNameHandler = () => {\r\n        if (names) {\r\n            props.addNewName(names)\r\n            setModal(false)\r\n            setNames('')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <SuperButton onClick={() => setModal(true)}>Add</SuperButton>\r\n            <Modal\r\n                modal={modal}\r\n                setModal={setModal}\r\n            >\r\n                <SuperInputText\r\n                    value={names}\r\n                    onChangeText={setNames}\r\n                    placeholder={'Name pack'}\r\n                />\r\n                <SuperButton onClick={changeNameHandler}>Add</SuperButton>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewPack;","import React, {FC} from \"react\";\r\nimport AddNewPack from \"../../PagesApp/WrappedPages/PacksPage/AddNewPack/AddNewPack\";\r\n\r\nimport style from './TableWrapper.module.scss'\r\n\r\ninterface Props {\r\n    onClickHandler?: (name:string) => void,\r\n\r\n}\r\n\r\n\r\n\r\nconst TableWrapper: FC<Props> = ({children, onClickHandler}) => {\r\n    const addNewName = (name:string) => {\r\n        onClickHandler && onClickHandler(name)\r\n    }\r\n    return (\r\n        <div className={style.main_wrapped}>\r\n            <div className={style.table_wrapped}>\r\n                <div className={style.title_wrapped}>\r\n                    <div className={style.title_item}>Name</div>\r\n                    <div className={style.title_item}>cardsCount</div>\r\n                    <div className={style.title_item}>updated</div>\r\n                    <div className={style.title_item}>\r\n                       <AddNewPack addNewName={addNewName}/>\r\n                    </div>\r\n\r\n                </div>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableWrapper","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\n\r\n//Paginators\r\ntype PropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChangeHandler?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChangeHandler = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChangeHandler(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: Array<string>\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((el, i) => (\n        <option key={i}>\n            {el}\n        </option>\n    )) : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addPacksThunk,\r\n    deletePackThunk,\r\n    getPacksThunk,\r\n    setCurrentPageAC,\r\n    seTisPrivat,\r\n    setPageSizeAC\r\n} from \"../../../Redux/PacksPageReducer/PacksPageReducer\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport PacksComponent from \"./PacksComponent\";\r\nimport TableWrapper from \"../../../Components/TableWrapper/TableWrapper\";\r\nimport Paginator from \"../../../Common/Paginator/PaginatorComponent\";\r\nimport SuperSelect from \"../../../Components/c5-SuperSelect/SuperSelect\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport SuperCheckbox from \"../../../Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './PacksContainer.module.scss'\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PacksContainer: FC<Props> = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const totalCoutnOptions = ['4', '7', '10', '20', '50']\r\n    const pageSize = useSelector((state: AppRootStateType) => state.packsPage.pageSize)\r\n    const currentPage= useSelector((state: AppRootStateType) => state.packsPage.currentPage)\r\n    const cardPacks = useSelector((state: AppRootStateType) => state.packsPage.cardPacks)\r\n    const status = useSelector((state: AppRootStateType) => state.packsPage.status)\r\n    const isPrivat = useSelector((state: AppRootStateType) => state.packsPage.isPrivat)\r\n    const userId = useSelector((state: AppRootStateType) => state.profile.profile?._id)\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const profile = useSelector((state: AppRootStateType) => state.profile.profile)\r\n\r\n    useEffect(() => {\r\n        if (isPrivat){\r\n            dispatch(getPacksThunk(pageSize, currentPage, userId))\r\n        } else {\r\n            dispatch(getPacksThunk(pageSize, currentPage))\r\n        }\r\n    }, [pageSize, currentPage, isPrivat, userId])\r\n    const onDeletePack = (id: string) => {\r\n        dispatch(deletePackThunk(id))\r\n    }\r\n    const onChangeOption = (option: string) => {\r\n        dispatch(setPageSizeAC(+option))\r\n    }\r\n    const onPageChangeHandler = (pageNumber: number) => {\r\n        dispatch(setCurrentPageAC(pageNumber))\r\n    }\r\n    const onAddPack = (name:string) => {\r\n        dispatch(addPacksThunk(name))\r\n    }\r\n    const setIsPrivatHandler = () => {\r\n        dispatch(seTisPrivat(!isPrivat))\r\n    }\r\n    if (!isLogin || !profile) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    return (\r\n        <div className={style.main_wrapp}>\r\n            <div className={style.isPrivat}><SuperCheckbox onChangeChecked={setIsPrivatHandler}>is Privat</SuperCheckbox></div>\r\n            <TableWrapper onClickHandler={onAddPack}>\r\n                {\r\n                    status === 'loading'\r\n                        ? <Spinner/>\r\n                        : cardPacks\r\n                        ? cardPacks.map((item, inx) => {\r\n                            return (\r\n                                <PacksComponent cardPacks={item} key={inx} onDeletePack={onDeletePack} />\r\n                            )\r\n                        })\r\n                        : null\r\n\r\n                }\r\n                <Paginator totalCount={100} pageSize={pageSize} currentPage={currentPage} onPageChangeHandler={onPageChangeHandler}/>\r\n                <div>Page size: <SuperSelect options={totalCoutnOptions} onChangeOption={onChangeOption}/></div>\r\n            </TableWrapper>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PacksContainer","import React, {FC, Fragment} from \"react\";\r\nimport {ResponseTypeCardsData} from \"../../../API/Api\";\r\nimport TableItem from \"../../../Components/TableWrapper/TableIttem/TableItem\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\n\r\nimport ChangeName from \"../PacksPage/ChengeNameInput\";\r\n\r\ninterface Props {\r\n    cards: ResponseTypeCardsData,\r\n    onDeleteCard: (id: string) => void\r\n    onChangeNameQuestion: (cardId: string,question:string) => void\r\n}\r\n\r\nconst CardsComponent: FC <Props> = ({ cards, onDeleteCard, onChangeNameQuestion\r\n\r\n}) => {\r\n\r\n\r\n    return (<Fragment>\r\n        <TableItem name1={cards.question} name2={cards.rating} name3={cards.updated}>\r\n            <SuperButton onClick={() => onDeleteCard(cards._id)} className='btn_table'>del</SuperButton>\r\n            <ChangeName namePack={cards.question}\r\n                        cardsPack_id={cards._id}\r\n                        onChangeName = {onChangeNameQuestion}\r\n            />\r\n        </TableItem>\r\n\r\n    </Fragment>)\r\n}\r\n\r\n\r\nexport default CardsComponent","import React, {FC, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {ResponseTypeCardsData} from \"../../../API/Api\";\r\nimport CardsComponent from \"./CardsComponent\";\r\nimport TableWrapper from \"../../../Components/TableWrapper/TableWrapper\";\r\nimport {RequestStatusType} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {addCardsThunk, deleteCardsThunk, onChangedCardsThunk} from \"../../../Redux/CardsReducer/CardsReducer\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\n\r\nconst CardsPageContainer: FC<Props> = ({...props}) => {\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.cardsPage.status)\r\n    const cards = useSelector<AppRootStateType, ResponseTypeCardsData[] | null>(state => state.cardsPage.cards)\r\n    const error = useSelector<AppRootStateType, string | null> (state => state.cardsPage.error)\r\n    const dispatch = useDispatch()\r\n\r\nconsole.log(status, error)\r\n\r\n        // cardsId - params from route for get Id from params\r\n    const {cardId} = useParams<{ cardId: string }>()\r\n\r\n    const onAddCard = (question: string) => {\r\n        dispatch(addCardsThunk(cardId, question))\r\n    }\r\n    const onDeleteCard = (id: string) => {\r\n        dispatch(deleteCardsThunk(cardId,id))\r\n    }\r\n\r\n    const onChangeNameQuestion = (id: string, question: string) => {\r\n        dispatch(onChangedCardsThunk(cardId, id, question ))\r\n    }\r\n\r\n    return (<div>\r\n                <div>{error}</div>\r\n        <TableWrapper onClickHandler={onAddCard} >\r\n            { status === \"loading\"? <Spinner /> : cards ?\r\n                cards?.map((item) => {\r\n                    return (<CardsComponent key={cardId} cards={item}\r\n                                            onDeleteCard = {onDeleteCard}\r\n                                            onChangeNameQuestion = {onChangeNameQuestion}\r\n                    />)\r\n\r\n                }) : null\r\n            }\r\n\r\n        </TableWrapper>\r\n\r\n    </div>)\r\n}\r\nexport default CardsPageContainer","export interface stateProps {\n\n\n}\n\n\nconst initialState: stateProps = {\n\n\n\n}\n\n\n//Type\nexport enum ActionType {\n}\n\n\n//actions\n\ninterface Action<T> {\n    type: ActionType,\n    payload: T\n\n}\n\n\n\n\n\n\n\nconst ErrorReducer = (state: stateProps = initialState, action: Action<any>): stateProps => {\n    switch (action.type) {\n\n    }\n    return state\n}\n\nexport default ErrorReducer","import {FC} from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport style from './NavigationContainer.module.scss'\r\n\r\nconst NavigationContainer: FC = () => {\r\n\r\n    return (\r\n    <nav>\r\n        <div className={style.wrapper}>\r\n            <NavLink\r\n                to={RoutingType.auth}\r\n                activeClassName={style.active}\r\n            >Auth</NavLink>\r\n            <NavLink\r\n                to={RoutingType.registration}\r\n                activeClassName={style.active}\r\n            >Registration</NavLink>\r\n            <NavLink\r\n                to={RoutingType.profile}\r\n                activeClassName={style.active}\r\n            >Profile</NavLink>\r\n            <NavLink\r\n                to={RoutingType.resPass}\r\n                activeClassName={style.active}\r\n            >Password Recovery</NavLink>\r\n            <NavLink\r\n                to={RoutingType.error}\r\n                activeClassName={style.active}\r\n            >ERROR</NavLink>\r\n            <NavLink to={RoutingType.packs} activeClassName={style.active}>\r\n                Page of Packs\r\n            </NavLink>\r\n        </div>\r\n\r\n\r\n\r\n    </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default NavigationContainer","import React, {FC, useEffect} from 'react';\r\nimport './App.css';\r\nimport NavigationContainer from \"./PagesApp/StaticPages/Navigation/NavigationContainer\";\r\nimport Routes from \"./Routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./Redux/Store\";\r\nimport Spinner from \"./Common/preloader/Spinner\";\r\nimport {setAuthMe} from './Redux/AuthReducer/AuthReducer';\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const isInitial = useSelector((state: AppRootStateType) => state.app.isInitial)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setAuthMe())\r\n    }, [])\r\n\r\n    if(!isInitial) {\r\n        return <Spinner/>\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <NavigationContainer/>\r\n        <div className={'container'}>\r\n            <Routes/>\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport { combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport AuthReducer, { AuthType } from \"./AuthReducer/AuthReducer\";\r\nimport NewPassReducer, {NewMesActionType} from \"./NewPassReducer/NewPassReducer\";\r\nimport ErrorReducer from \"./ErrorReducer/ErrorReducer\";\r\nimport ProfileReducer, { ActionProfileType } from \"./ProfileReducer/ProfileReducer\";\r\nimport  RegistrationReducer from \"./RegistrationReducer/RegistartionReducer\";\r\nimport ResPasswordReducer, {ResPasswordType} from \"./ResPassReducer/ResPasswordReducer\";\r\n\r\n\r\nimport {AppReducer, AppType } from './AppReducer/AppReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport PacksPageReducer from \"./PacksPageReducer/PacksPageReducer\";\r\nimport CardsReducer from \"./CardsReducer/CardsReducer\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n    auth: AuthReducer,\r\n    newPas: NewPassReducer,\r\n    error: ErrorReducer,\r\n    profile: ProfileReducer,\r\n    registration:  RegistrationReducer,\r\n    resPas: ResPasswordReducer,\r\n    app: AppReducer,\r\n    packsPage: PacksPageReducer,\r\n    cardsPage: CardsReducer\r\n\r\n})\r\n\r\n\r\nconst middleware = applyMiddleware(thunkMiddleware)\r\n\r\n\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(middleware));\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\nexport type AppActionType = AuthType | ActionProfileType | AppType | NewMesActionType | ResPasswordType\r\n\r\n\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AppActionType\r\n    >\r\n\r\nexport default store\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/Store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_main_wrapper\":\"ProfileContainer_profile_main_wrapper__8BMrP\",\"profile_item_wrapper\":\"ProfileContainer_profile_item_wrapper__3Hmy3\",\"profile_item\":\"ProfileContainer_profile_item__1uA2M\",\"item_title\":\"ProfileContainer_item_title__2adHS\",\"change_name\":\"ProfileContainer_change_name__3WFo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_wrapper\":\"AuthContainer_auth_wrapper__2ZEiM\",\"auth_main\":\"AuthContainer_auth_main__2Q64b\",\"container\":\"AuthContainer_container__Cp3MG\",\"auth_link\":\"AuthContainer_auth_link__3du65\",\"input_block\":\"AuthContainer_input_block__358HR\",\"btn_check\":\"AuthContainer_btn_check__2lyt4\",\"errorMesOp\":\"AuthContainer_errorMesOp__1BFwR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapped\":\"TableWrapper_main_wrapped__3LrjB\",\"table_wrapped\":\"TableWrapper_table_wrapped__2uJIv\",\"title_wrapped\":\"TableWrapper_title_wrapped__1jYVc\",\"title_item\":\"TableWrapper_title_item__2uxYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NavigationContainer_wrapper__impKM\",\"active\":\"NavigationContainer_active__3FBMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_wrapped\":\"TableItem_card_wrapped__3yk0R\",\"card_item\":\"TableItem_card_item__hWpdE\",\"card_item_btn\":\"TableItem_card_item_btn__1QHmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Uo8q\",\"errorInput\":\"SuperInputText_errorInput__BGY1O\",\"error\":\"SuperInputText_error__1NhMr\",\"otherInput\":\"SuperInputText_otherInput__3Y3yV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1KT8K\",\"modal_content\":\"Modal_modal_content__plVuK\",\"active\":\"Modal_active__eV1Hs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__GWrrd\",\"btn_table\":\"SuperButton_btn_table__1bnWw\",\"button_red\":\"SuperButton_button_red__Yj961\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg_wrapper\":\"Registration_reg_wrapper__1nsMy\",\"container\":\"Registration_container__trzTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"res_Password_wrapper\":\"ResPassword_res_Password_wrapper__R_SEz\",\"error\":\"ResPassword_error__2IhKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3xZkP\",\"pageNumber\":\"Paginator_pageNumber__2U-_Y\",\"selectedPage\":\"Paginator_selectedPage__3T1sE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2uUJr\",\"spanClassName\":\"SuperCheckbox_spanClassName__svmRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_main\":\"NewPasswordContainer_wrapper_main__1PVeh\",\"wrapper_items\":\"NewPasswordContainer_wrapper_items__14ybX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isPrivat\":\"PacksContainer_isPrivat__10WxP\",\"main_wrapp\":\"PacksContainer_main_wrapp__2hOHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2kJZ9\",\"animates\":\"Spinner_animates__2lPS0\",\"animateBg\":\"Spinner_animateBg__2t3gD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapped\":\"Error404_wrapped__17SRQ\",\"sadMac\":\"Error404_sadMac__SV1uy\",\"srText\":\"Error404_srText__1ez_H\",\"_0\":\"Error404__0__ExpxW\",\"_4\":\"Error404__4__1l5b2\",\"d\":\"Error404_d__3nQLM\",\"e\":\"Error404_e__2c6Vf\",\"f\":\"Error404_f__3m9DT\",\"n\":\"Error404_n__3L7WZ\",\"o\":\"Error404_o__MAVua\",\"r\":\"Error404_r__-7Tv_\",\"t\":\"Error404_t__3fxtU\",\"u\":\"Error404_u__wF1sm\"};"],"sourceRoot":""}